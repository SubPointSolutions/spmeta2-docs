@using System
@*<div class="navbar navbar-inverse navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="/">Documentation</a>
            </div>
            <div class="navbar-collapse collapse">

            </div>
        </div>
    </div>*@

@{
    // pre-init
    var currentDocument = Model;
    
    var currentDocumentPath = currentDocument.String("RelativeFilePath", string.Empty);
    var currentFolderPath = System.IO.Path.GetDirectoryName(currentDocumentPath);
    
    var navSplit = Model.String("RelativeFilePath", string.Empty).Split(new[] { '\\' });

    var navFolder = navSplit[0];
    var navSubFolder = navSplit.Count() > 1 ? navSplit[1] : string.Empty;
    
    // root link, home
    if (navSubFolder.EndsWith(".md"))
    {
        navSubFolder = string.Empty;
    }

    var allSubnavDocuments = Documents
        .Where(x => x.ContainsKey("RelativeFilePath")
                    && x.String("RelativeFilePath").StartsWith(navFolder + @"\")
                    && !x.String("SourceFileBase").StartsWith("_")
                    && x.String("RelativeFilePath").StartsWith(navFolder)
                    && x.String("RelativeFilePath").EndsWith("ndex.md")
                    //&& x.String("RelativeFilePath", string.Empty)
                    //            .Split(new[] { '\\' })
                    //            .Count() == 3

                    && x.Get<bool>("TopNavigationNode", false) == true
              )
         .OrderBy(x => x.String("Order", "0"))
         .Select(x => new
         {
             Document = x,
             Title = x.Get<String>("SecondNavTitle", x.String("Title")),
             IsActive = currentDocumentPath.StartsWith(System.IO.Path.GetDirectoryName(x.String("RelativeFilePath"))),
             LinkPath = PathHelper.ToRootLink(PathHelper.RemoveExtension(x.String("RelativeFilePath"))) + ".html"
         }).ToList();

    
    //var selectedGrouselectedGroupp = allSubgroups.FirstOrDefault(g => g.SubgroupName == navSubFolder);
}

<div class="sub-nav" m-current-subfolder="@navSubFolder" nav-folder="@navFolder">

    @*<h2>
        @navFolder
    </h2>*@

    <ul>
        @foreach (var doc in allSubnavDocuments)
        {
            var title = doc.Title;
            var linkPath = doc.LinkPath;
            
            var isActive = doc.IsActive;

            // issue with the first item pointing to the very root of the docs
            // selecting the first one if only others weren't selected
            if (allSubnavDocuments.IndexOf(doc) == 0 )
            {
                if (isActive && allSubnavDocuments.Count(t => t.IsActive) > 1)
                {
                    isActive = false;
                }
            }
            
            var cssClass = isActive ? "active" : string.Empty;

            <li>
                <a class="@cssClass" href="@linkPath">
                    @title
                </a>
            </li>
        }

    </ul>

</div>