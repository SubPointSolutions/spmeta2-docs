using System;
using System.Text;
using System.Linq;

namespace SubPointSolutions.Docs.Code.Samples
{
    public static class reSPSamples
    {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>AvoidSPObjectNameStringComparison</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>InappropriateComparison</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void InappropriateComparison(SPSite site)\r\n        {\r\n            var session = new TaxonomySession(site);\r\n            var termStore = session.TermStores[\"Company\"];\r\n\r\n            var group = termStore.Groups[\"HR\"];\r\n            var termSet = group.TermSets[\"Review\"];\r\n            var term = termSet.Terms[\"Year 2012\"];\r\n\r\n            // wrong\r\n            if (group.Name != \"HR\")\r\n            {\r\n                // wrong\r\n                if (term.Name != \"Review\")\r\n                {\r\n                    // Do stuff\r\n                }\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var session = new TaxonomySession(site);\r\n            var termStore = session.TermStores[\"Company\"];\r\n\r\n            var group = termStore.Groups[\"HR\"];\r\n            var termSet = group.TermSets[\"Review\"];\r\n            var term = termSet.Terms[\"Year 2012\"];\r\n\r\n            // wrong\r\n            if (group.Name != \"HR\")\r\n            {\r\n                // wrong\r\n                if (term.Name != \"Review\")\r\n                {\r\n                    // Do stuff\r\n                }\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>AvoidSPObjectNameStringComparison</ClassName>\r\n  <MethodName>InappropriateComparison</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.AvoidSPObjectNameStringComparison.InappropriateComparison</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.AvoidSPObjectNameStringComparison</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>AvoidSPObjectNameStringComparison.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidSPObjectNameStringComparison</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidSPObjectNameStringComparison.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>AvoidUsingSPListItemFile</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>AppropriateSPListItemSPFileUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void AppropriateSPListItemSPFileUsage(SPListItem item)\r\n        {\r\n            var file = item.Web.GetFile(item.UniqueId);\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var file = item.Web.GetFile(item.UniqueId);</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>AvoidUsingSPListItemFile</ClassName>\r\n  <MethodName>AppropriateSPListItemSPFileUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.AvoidUsingSPListItemFile.AppropriateSPListItemSPFileUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.AvoidUsingSPListItemFile</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>AvoidUsingSPListItemFile.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidUsingSPListItemFile</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidUsingSPListItemFile.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotSuppressExceptions</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CallerMethod</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CallerMethod(ControlCollection controlCollection)\r\n        {\r\n            try\r\n            {\r\n                CalledMethod(\"Test\");\r\n            }\r\n            // DO NOT CATCH USAGE EXCEPTION\r\n            catch (ArgumentNotSpecifiedException ex)\r\n            {\r\n                // special handling for ArgumentNotSpecifiedException\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // log it\r\n                throw new WrappedException(\"Method XXX call  error occurred\", ex); // wrapped &amp; chained exceptions.\r\n            }\r\n            finally\r\n            {\r\n                // normal clean goes here (like closing open files).\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>try\r\n            {\r\n                CalledMethod(\"Test\");\r\n            }\r\n            // DO NOT CATCH USAGE EXCEPTION\r\n            catch (ArgumentNotSpecifiedException ex)\r\n            {\r\n                // special handling for ArgumentNotSpecifiedException\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // log it\r\n                throw new WrappedException(\"Method XXX call  error occurred\", ex); // wrapped &amp; chained exceptions.\r\n            }\r\n            finally\r\n            {\r\n                // normal clean goes here (like closing open files).\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotSuppressExceptions</ClassName>\r\n  <MethodName>CallerMethod</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotSuppressExceptions.CallerMethod</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotSuppressExceptions</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotSuppressExceptions.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotSuppressExceptions</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotSuppressExceptions.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotSuppressExceptions</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CalledMethod</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CalledMethod(string p1)\r\n        {\r\n            // Validate parameter and throw \"usage exception\"\r\n            if (String.IsNullOrEmpty(p1))\r\n                throw new ArgumentNotSpecifiedException(\"Parameter p1 must be specified\");\r\n\r\n            // Here we save data to the storage and the \"system exception\" could be raised\r\n            try\r\n            {\r\n                DAL.Save(p1);\r\n            }\r\n            catch (SqlException e)\r\n            {\r\n                if (e.ErrorCode != NO_ROW_ERROR)\r\n                {\r\n                    // filter out NoDataFound.\r\n                    // do special cleanup, like maybe closing the \"dirty\" database connection.\r\n                    // throw e; &lt;- DO NOT DO IT. This destroys the strack trace information!\r\n                    throw; // this preserves the stack trace\r\n                }\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// Validate parameter and throw \"usage exception\"\r\n            if (String.IsNullOrEmpty(p1))\r\n                throw new ArgumentNotSpecifiedException(\"Parameter p1 must be specified\");\r\n\r\n            // Here we save data to the storage and the \"system exception\" could be raised\r\n            try\r\n            {\r\n                DAL.Save(p1);\r\n            }\r\n            catch (SqlException e)\r\n            {\r\n                if (e.ErrorCode != NO_ROW_ERROR)\r\n                {\r\n                    // filter out NoDataFound.\r\n                    // do special cleanup, like maybe closing the \"dirty\" database connection.\r\n                    // throw e; &lt;- DO NOT DO IT. This destroys the strack trace information!\r\n                    throw; // this preserves the stack trace\r\n                }\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotSuppressExceptions</ClassName>\r\n  <MethodName>CalledMethod</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotSuppressExceptions.CalledMethod</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotSuppressExceptions</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotSuppressExceptions.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotSuppressExceptions</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotSuppressExceptions.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DAL</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>Save</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>public static void Save(string p1)\r\n        {\r\n            throw new NotImplementedException();\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>throw new NotImplementedException();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DAL</ClassName>\r\n  <MethodName>Save</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DAL.Save</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DAL</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotSuppressExceptions.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotSuppressExceptions</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotSuppressExceptions.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseEntityEditorEntities</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>GetPeoplePickerUser</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public SPPrincipalInfo GetPeoplePickerUser(ControlCollection controlCollection)\r\n        {\r\n            SPPrincipalInfo result = null;\r\n\r\n            foreach (Control control in controlCollection)\r\n            {\r\n                var peopleEditor = control as PeopleEditor;\r\n                if (peopleEditor != null &amp;&amp; peopleEditor.Entities.Count == 1)\r\n                {\r\n                    PickerEntity pickerEntity = (PickerEntity)peopleEditor.Entities[0];\r\n                    // get principal info code here ...\r\n                    return result;\r\n                }\r\n                if (control.HasControls())\r\n                {\r\n                    result = GetPeoplePickerUser(control.Controls);\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>SPPrincipalInfo result = null;\r\n\r\n            foreach (Control control in controlCollection)\r\n            {\r\n                var peopleEditor = control as PeopleEditor;\r\n                if (peopleEditor != null &amp;&amp; peopleEditor.Entities.Count == 1)\r\n                {\r\n                    PickerEntity pickerEntity = (PickerEntity)peopleEditor.Entities[0];\r\n                    // get principal info code here ...\r\n                    return result;\r\n                }\r\n                if (control.HasControls())\r\n                {\r\n                    result = GetPeoplePickerUser(control.Controls);\r\n                }\r\n            }\r\n\r\n            return result;</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotUseEntityEditorEntities</ClassName>\r\n  <MethodName>GetPeoplePickerUser</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotUseEntityEditorEntities.GetPeoplePickerUser</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotUseEntityEditorEntities</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotUseEntityEditorEntities.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseEntityEditorEntities</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseEntityEditorEntities.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContentTypeFieldsToAddOrDelete</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>InappropriateSPContentTypeFieldsUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void InappropriateSPContentTypeFieldsUsage(SPWeb web, string contentTypeName)\r\n        {\r\n            var ct = web.ContentTypes[contentTypeName];\r\n            ct.Fields.Add(\"NewField\", SPFieldType.Boolean, true);\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var ct = web.ContentTypes[contentTypeName];\r\n            ct.Fields.Add(\"NewField\", SPFieldType.Boolean, true);</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseSPContentTypeFieldsToAddOrDelete</ClassName>\r\n  <MethodName>InappropriateSPContentTypeFieldsUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete.InappropriateSPContentTypeFieldsUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete</ClassFullName>\r\n  <MethodParametersCount>2</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContentTypeFieldsToAddOrDelete</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContentTypeFieldsToAddOrDelete</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>AppropriateAddingFields</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void AppropriateAddingFields(SPContentType contentType, SPField field)\r\n        {\r\n            //Check if the Field reference does not exists already\r\n            if (!contentType.Fields.ContainsField(field.Title))\r\n            {\r\n                contentType.FieldLinks.Add(new SPFieldLink(field));\r\n                contentType.Update();\r\n            }\r\n            else\r\n            {\r\n                //Do Nothing\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>//Check if the Field reference does not exists already\r\n            if (!contentType.Fields.ContainsField(field.Title))\r\n            {\r\n                contentType.FieldLinks.Add(new SPFieldLink(field));\r\n                contentType.Update();\r\n            }\r\n            else\r\n            {\r\n                //Do Nothing\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseSPContentTypeFieldsToAddOrDelete</ClassName>\r\n  <MethodName>AppropriateAddingFields</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete.AppropriateAddingFields</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete</ClassFullName>\r\n  <MethodParametersCount>2</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContentTypeFieldsToAddOrDelete</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContentTypeFieldsToAddOrDelete</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>AppropriateDeletingFields</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void AppropriateDeletingFields(SPContentType contentType, SPField field)\r\n        {\r\n            //Check if the Field reference exists\r\n            if (contentType.Fields.ContainsField(field.Title))\r\n            {\r\n                contentType.FieldLinks.Delete(field.Title);\r\n                contentType.Update();\r\n            }\r\n            else\r\n            {\r\n                //Do Nothing\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>//Check if the Field reference exists\r\n            if (contentType.Fields.ContainsField(field.Title))\r\n            {\r\n                contentType.FieldLinks.Delete(field.Title);\r\n                contentType.Update();\r\n            }\r\n            else\r\n            {\r\n                //Do Nothing\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseSPContentTypeFieldsToAddOrDelete</ClassName>\r\n  <MethodName>AppropriateDeletingFields</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete.AppropriateDeletingFields</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete</ClassFullName>\r\n  <MethodParametersCount>2</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContentTypeFieldsToAddOrDelete</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContextObjectInDisposedBlock</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>InapropriateSPContextUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        \r\n        public void InapropriateSPContextUsage()\r\n        {\r\n            using (var site = SPContext.Current.Site)\r\n            {\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>using (var site = SPContext.Current.Site)\r\n            {\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotUseSPContextObjectInDisposedBlock</ClassName>\r\n  <MethodName>InapropriateSPContextUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp.DoNotUseSPContextObjectInDisposedBlock.InapropriateSPContextUsage</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp.DoNotUseSPContextObjectInDisposedBlock</ClassFullName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContextObjectInDisposedBlock.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContextObjectInDisposedBlock</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContextObjectInDisposedBlock.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContextObjectInDisposedBlock</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPContextUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        \r\n        public void CorrectSPContextUsage()\r\n        {\r\n            using (var site = new SPSite(SPContext.Current.Site.ID))\r\n            {\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>using (var site = new SPSite(SPContext.Current.Site.ID))\r\n            {\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotUseSPContextObjectInDisposedBlock</ClassName>\r\n  <MethodName>CorrectSPContextUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp.DoNotUseSPContextObjectInDisposedBlock.CorrectSPContextUsage</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp.DoNotUseSPContextObjectInDisposedBlock</ClassFullName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContextObjectInDisposedBlock.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContextObjectInDisposedBlock</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContextObjectInDisposedBlock.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseUnsafeTypeConversionOnSPListItem</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>IncorrectSPListItemCast</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void IncorrectSPListItemCast(SPListItem item)\r\n        {\r\n            string date1 = item[\"Date\"].ToString();\r\n            DateTime date2 = (DateTime)item[\"Date\"];\r\n            int x = ((SPFieldUserValue)item[\"User\"]).LookupId;\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>string date1 = item[\"Date\"].ToString();\r\n            DateTime date2 = (DateTime)item[\"Date\"];\r\n            int x = ((SPFieldUserValue)item[\"User\"]).LookupId;</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseUnsafeTypeConversionOnSPListItem</ClassName>\r\n  <MethodName>IncorrectSPListItemCast</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseUnsafeTypeConversionOnSPListItem.IncorrectSPListItemCast</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseUnsafeTypeConversionOnSPListItem</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotUseUnsafeTypeConversionOnSPListItem.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseUnsafeTypeConversionOnSPListItem</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseUnsafeTypeConversionOnSPListItem.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseUnsafeTypeConversionOnSPListItem</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPListItemCast</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPListItemCast(SPListItem item)\r\n        {\r\n            DateTime date1 = Convert.ToDateTime(item[\"Date\"]);\r\n            DateTime? date2 = item[\"Date\"] as DateTime?;\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>DateTime date1 = Convert.ToDateTime(item[\"Date\"]);\r\n            DateTime? date2 = item[\"Date\"] as DateTime?;</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseUnsafeTypeConversionOnSPListItem</ClassName>\r\n  <MethodName>CorrectSPListItemCast</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseUnsafeTypeConversionOnSPListItem.CorrectSPListItemCast</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseUnsafeTypeConversionOnSPListItem</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotUseUnsafeTypeConversionOnSPListItem.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseUnsafeTypeConversionOnSPListItem</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseUnsafeTypeConversionOnSPListItem.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>InappropriateUsageOfSPListCollection</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectListUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectListUsage(SPWeb web)\r\n        {\r\n            var listUrl = \"/lists/tasks\";\r\n            var taskList = web.GetList(SPUrlUtility.CombineUrl(web.Url, listUrl));\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var listUrl = \"/lists/tasks\";\r\n            var taskList = web.GetList(SPUrlUtility.CombineUrl(web.Url, listUrl));</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>InappropriateUsageOfSPListCollection</ClassName>\r\n  <MethodName>CorrectListUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.InappropriateUsageOfSPListCollection.CorrectListUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.InappropriateUsageOfSPListCollection</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>InappropriateUsageOfSPListCollection.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>InappropriateUsageOfSPListCollection</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\InappropriateUsageOfSPListCollection.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>OutOfContextRWEP</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>TrustedConnectionSample</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void TrustedConnectionSample(SPWeb web)\r\n        {\r\n            // Windows credentials of the current user are used to authenticate against SQL Server and any &lt;user id=&gt; setting will be ignored \r\n            var sqlConnection = new SqlConnection(\"Data Source=SQLDevelopment; Initial Catalog=SQL2008; Integrated Security=SSPI;\");\r\n            var sqlCommand = new SqlCommand(\"SELECT * FROM [dbo].[Emplpoyees]\", sqlConnection);\r\n\r\n            var sqlConnection2 = new SqlConnection(\"Server=SQLDevelopment; Database=SQL2008; Trusted_Connection=True\");\r\n            var sqlCommand2 = new SqlCommand(\"SELECT * FROM [dbo].[Students]\", sqlConnection2);\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// Windows credentials of the current user are used to authenticate against SQL Server and any &lt;user id=&gt; setting will be ignored \r\n            var sqlConnection = new SqlConnection(\"Data Source=SQLDevelopment; Initial Catalog=SQL2008; Integrated Security=SSPI;\");\r\n            var sqlCommand = new SqlCommand(\"SELECT * FROM [dbo].[Emplpoyees]\", sqlConnection);\r\n\r\n            var sqlConnection2 = new SqlConnection(\"Server=SQLDevelopment; Database=SQL2008; Trusted_Connection=True\");\r\n            var sqlCommand2 = new SqlCommand(\"SELECT * FROM [dbo].[Students]\", sqlConnection2);</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>OutOfContextRWEP</ClassName>\r\n  <MethodName>TrustedConnectionSample</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.OutOfContextRWEP.TrustedConnectionSample</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.OutOfContextRWEP</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>OutOfContextRWEP.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>OutOfContextRWEP</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\OutOfContextRWEP.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>PutSPFileExistsIntoTryCatchBlock</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPFileExistsUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPFileExistsUsage(SPWeb web)\r\n        {\r\n            var defaultMasterUrl = \"/_catalogs/masterpage/default.master\";\r\n\r\n            if (web.AllProperties.ContainsKey(\"OldMasterUrl\"))\r\n            {\r\n                string oldMasterUrl = web.AllProperties[\"OldMasterUrl\"].ToString();\r\n                try\r\n                {\r\n                    var fileExists = web.GetFile(oldMasterUrl).Exists;\r\n                    web.MasterUrl = oldMasterUrl;\r\n                }\r\n                catch (ArgumentException)\r\n                {\r\n                    web.MasterUrl = defaultMasterUrl;\r\n                }\r\n\r\n\r\n                var oldCustomUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n                try\r\n                {\r\n                    var fileExists = web.GetFile(oldCustomUrl).Exists;\r\n                    web.CustomMasterUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n                }\r\n                catch (ArgumentException)\r\n                {\r\n                    web.CustomMasterUrl = defaultMasterUrl;\r\n                }\r\n\r\n                web.AllProperties.Remove(\"OldMasterUrl\");\r\n                web.AllProperties.Remove(\"OldCustomMasterUrl\");\r\n            }\r\n            else\r\n            {\r\n                web.MasterUrl = defaultMasterUrl;\r\n                web.CustomMasterUrl = defaultMasterUrl;\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var defaultMasterUrl = \"/_catalogs/masterpage/default.master\";\r\n\r\n            if (web.AllProperties.ContainsKey(\"OldMasterUrl\"))\r\n            {\r\n                string oldMasterUrl = web.AllProperties[\"OldMasterUrl\"].ToString();\r\n                try\r\n                {\r\n                    var fileExists = web.GetFile(oldMasterUrl).Exists;\r\n                    web.MasterUrl = oldMasterUrl;\r\n                }\r\n                catch (ArgumentException)\r\n                {\r\n                    web.MasterUrl = defaultMasterUrl;\r\n                }\r\n\r\n\r\n                var oldCustomUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n                try\r\n                {\r\n                    var fileExists = web.GetFile(oldCustomUrl).Exists;\r\n                    web.CustomMasterUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n                }\r\n                catch (ArgumentException)\r\n                {\r\n                    web.CustomMasterUrl = defaultMasterUrl;\r\n                }\r\n\r\n                web.AllProperties.Remove(\"OldMasterUrl\");\r\n                web.AllProperties.Remove(\"OldCustomMasterUrl\");\r\n            }\r\n            else\r\n            {\r\n                web.MasterUrl = defaultMasterUrl;\r\n                web.CustomMasterUrl = defaultMasterUrl;\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>PutSPFileExistsIntoTryCatchBlock</ClassName>\r\n  <MethodName>CorrectSPFileExistsUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.PutSPFileExistsIntoTryCatchBlock.CorrectSPFileExistsUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.PutSPFileExistsIntoTryCatchBlock</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>PutSPFileExistsIntoTryCatchBlock.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>PutSPFileExistsIntoTryCatchBlock</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\PutSPFileExistsIntoTryCatchBlock.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SendMailFromWcfService</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSendMailFromWcfServiceUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSendMailFromWcfServiceUsage(SPWeb web, string to, string subject, string body)\r\n        {\r\n            // save current context\r\n            HttpContext curCtx = HttpContext.Current;\r\n            HttpContext.Current = null; // &lt;-- recommended approach for wcf services\r\n\r\n            bool success = SPUtility.SendEmail(web, true, true, to, subject, body);\r\n\r\n            // restore the context\r\n            HttpContext.Current = curCtx;\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// save current context\r\n            HttpContext curCtx = HttpContext.Current;\r\n            HttpContext.Current = null; // &lt;-- recommended approach for wcf services\r\n\r\n            bool success = SPUtility.SendEmail(web, true, true, to, subject, body);\r\n\r\n            // restore the context\r\n            HttpContext.Current = curCtx;</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SendMailFromWcfService</ClassName>\r\n  <MethodName>CorrectSendMailFromWcfServiceUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SendMailFromWcfService.CorrectSendMailFromWcfServiceUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SendMailFromWcfService</ClassFullName>\r\n  <MethodParametersCount>4</MethodParametersCount>\r\n  <SourceFileName>SendMailFromWcfService.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SendMailFromWcfService</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SendMailFromWcfService.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SPDataSourceScopeDoesNotDefined</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>SPDataSourceScopeUsageSamples</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void SPDataSourceScopeUsageSamples(SPList list)\r\n        {\r\n            var ds = new SPDataSource();\r\n\r\n            ds.List = list;\r\n            ds.DataSourceMode = SPDataSourceMode.List;\r\n            ds.IncludeHidden = false;\r\n\r\n            ds.Scope = SPViewScope.Recursive; // &lt;-  recommended\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var ds = new SPDataSource();\r\n\r\n            ds.List = list;\r\n            ds.DataSourceMode = SPDataSourceMode.List;\r\n            ds.IncludeHidden = false;\r\n\r\n            ds.Scope = SPViewScope.Recursive; // &lt;-  recommended</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SPDataSourceScopeDoesNotDefined</ClassName>\r\n  <MethodName>SPDataSourceScopeUsageSamples</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPDataSourceScopeDoesNotDefined.SPDataSourceScopeUsageSamples</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPDataSourceScopeDoesNotDefined</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SPDataSourceScopeDoesNotDefined.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SPDataSourceScopeDoesNotDefined</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SPDataSourceScopeDoesNotDefined.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SpecifySPZoneInSPSite</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>IncorrectSPUrlZoneParamUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void IncorrectSPUrlZoneParamUsage(SPList list)\r\n        {\r\n            using (SPSite site = new SPSite(SPContext.Current.Site.ID))\r\n            {\r\n                SPUrlZone zone = site.Zone;\r\n                //Logic that depends on Zone\r\n                //Oops! Zone is always \'Default\'\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>using (SPSite site = new SPSite(SPContext.Current.Site.ID))\r\n            {\r\n                SPUrlZone zone = site.Zone;\r\n                //Logic that depends on Zone\r\n                //Oops! Zone is always \'Default\'\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SpecifySPZoneInSPSite</ClassName>\r\n  <MethodName>IncorrectSPUrlZoneParamUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SpecifySPZoneInSPSite.IncorrectSPUrlZoneParamUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SpecifySPZoneInSPSite</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SpecifySPZoneInSPSite.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SpecifySPZoneInSPSite</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SpecifySPZoneInSPSite.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SpecifySPZoneInSPSite</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPUrlZoneParamUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPUrlZoneParamUsage(SPList list)\r\n        {\r\n            using (SPSite site = new SPSite(SPContext.Current.Site.ID, SPContext.Current.Site.Zone))\r\n            {\r\n                SPUrlZone zone = site.Zone;\r\n                //Logic that depends on Zone\r\n                //Zone will contain the correct Zone depending upon the Context\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>using (SPSite site = new SPSite(SPContext.Current.Site.ID, SPContext.Current.Site.Zone))\r\n            {\r\n                SPUrlZone zone = site.Zone;\r\n                //Logic that depends on Zone\r\n                //Zone will contain the correct Zone depending upon the Context\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SpecifySPZoneInSPSite</ClassName>\r\n  <MethodName>CorrectSPUrlZoneParamUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SpecifySPZoneInSPSite.CorrectSPUrlZoneParamUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SpecifySPZoneInSPSite</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SpecifySPZoneInSPSite.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SpecifySPZoneInSPSite</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SpecifySPZoneInSPSite.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SPQueryScopeDoesNotDefined</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>SPQueryScopeUsageSamples</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void SPQueryScopeUsageSamples(SPList list)\r\n        {\r\n            Console.WriteLine(\"All Items Count: \" + list.ItemCount);\r\n\r\n            var firstQuery = new SPQuery();\r\n            var firstResult = list.GetItems(firstQuery);\r\n\r\n            Console.WriteLine(\"First Query: \" + firstResult.Count);\r\n\r\n            var secondQuery = new SPQuery\r\n            {\r\n                ViewAttributes = \"Scope=\\\"RecursiveAll\\\"\"\r\n            };\r\n            var secondResult = list.GetItems(secondQuery);\r\n\r\n            Console.WriteLine(\"Second Query: \" + secondResult.Count);\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>Console.WriteLine(\"All Items Count: \" + list.ItemCount);\r\n\r\n            var firstQuery = new SPQuery();\r\n            var firstResult = list.GetItems(firstQuery);\r\n\r\n            Console.WriteLine(\"First Query: \" + firstResult.Count);\r\n\r\n            var secondQuery = new SPQuery\r\n            {\r\n                ViewAttributes = \"Scope=\\\"RecursiveAll\\\"\"\r\n            };\r\n            var secondResult = list.GetItems(secondQuery);\r\n\r\n            Console.WriteLine(\"Second Query: \" + secondResult.Count);</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SPQueryScopeDoesNotDefined</ClassName>\r\n  <MethodName>SPQueryScopeUsageSamples</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPQueryScopeDoesNotDefined.SPQueryScopeUsageSamples</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPQueryScopeDoesNotDefined</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SPQueryScopeDoesNotDefined.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SPQueryScopeDoesNotDefined</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SPQueryScopeDoesNotDefined.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SPViewScopeDoesNotDefined</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPViewScopeUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPViewScopeUsage(SPList list)\r\n        {\r\n            var viewFields = new[] { \"Title\", \"Department\" };\r\n\r\n            var fields = new StringCollection();\r\n            fields.AddRange(viewFields);\r\n\r\n            var newView = list.Views.Add(\"TestView\", fields, string.Empty, 100, true, false);\r\n\r\n            // define SPView.Scope\r\n            newView.Scope = SPViewScope.Recursive;\r\n            newView.Update();\r\n\r\n            list.Update();\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var viewFields = new[] { \"Title\", \"Department\" };\r\n\r\n            var fields = new StringCollection();\r\n            fields.AddRange(viewFields);\r\n\r\n            var newView = list.Views.Add(\"TestView\", fields, string.Empty, 100, true, false);\r\n\r\n            // define SPView.Scope\r\n            newView.Scope = SPViewScope.Recursive;\r\n            newView.Update();\r\n\r\n            list.Update();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SPViewScopeDoesNotDefined</ClassName>\r\n  <MethodName>CorrectSPViewScopeUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPViewScopeDoesNotDefined.CorrectSPViewScopeUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPViewScopeDoesNotDefined</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SPViewScopeDoesNotDefined.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SPViewScopeDoesNotDefined</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SPViewScopeDoesNotDefined.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>UnsafeCastingInItemReceiver</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>UnsafeCastOnSPItemEventDataCollectionItem</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void UnsafeCastOnSPItemEventDataCollectionItem(SPItemEventProperties properties)\r\n        {\r\n            properties.AfterProperties[\"Contracts\"].ToString();\r\n            properties.BeforeProperties[\"Contracts\"].ToString();\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>properties.AfterProperties[\"Contracts\"].ToString();\r\n            properties.BeforeProperties[\"Contracts\"].ToString();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>UnsafeCastingInItemReceiver</ClassName>\r\n  <MethodName>UnsafeCastOnSPItemEventDataCollectionItem</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.UnsafeCastingInItemReceiver.UnsafeCastOnSPItemEventDataCollectionItem</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.UnsafeCastingInItemReceiver</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>UnsafeCastingInItemReceiver.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>UnsafeCastingInItemReceiver</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\UnsafeCastingInItemReceiver.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>WrongSPViewUpdate</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>IncorrectSPViewUpdate</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void IncorrectSPViewUpdate(SPList list)\r\n        {\r\n            // won\'t save view (!!!)\r\n            list.Views[\"TestView1\"].DefaultView = true;\r\n            list.Views[\"TestView1\"].Update();\r\n\r\n            // saves the \"NewField2\" only (!!!)\r\n            list.DefaultView.ViewFields.Add(\"NewField1\");\r\n            list.DefaultView.ViewFields.Add(\"NewField2\");\r\n            list.DefaultView.Update();\r\n\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// won\'t save view (!!!)\r\n            list.Views[\"TestView1\"].DefaultView = true;\r\n            list.Views[\"TestView1\"].Update();\r\n\r\n            // saves the \"NewField2\" only (!!!)\r\n            list.DefaultView.ViewFields.Add(\"NewField1\");\r\n            list.DefaultView.ViewFields.Add(\"NewField2\");\r\n            list.DefaultView.Update();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>WrongSPViewUpdate</ClassName>\r\n  <MethodName>IncorrectSPViewUpdate</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.WrongSPViewUpdate.IncorrectSPViewUpdate</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.WrongSPViewUpdate</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>WrongSPViewUpdate.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>WrongSPViewUpdate</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\WrongSPViewUpdate.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>WrongSPViewUpdate</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPViewUpdate</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPViewUpdate(SPList list)\r\n        {\r\n            // save SPView instance into a local varible, always!\r\n            var view = list.Views[\"TestView1\"];\r\n\r\n            view.DefaultView = true;\r\n            view.Paged = true;\r\n\r\n            view.Update();\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// save SPView instance into a local varible, always!\r\n            var view = list.Views[\"TestView1\"];\r\n\r\n            view.DefaultView = true;\r\n            view.Paged = true;\r\n\r\n            view.Update();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>WrongSPViewUpdate</ClassName>\r\n  <MethodName>CorrectSPViewUpdate</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.WrongSPViewUpdate.CorrectSPViewUpdate</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.WrongSPViewUpdate</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>WrongSPViewUpdate.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>WrongSPViewUpdate</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\WrongSPViewUpdate.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>window.myappName$ = window.myappName$ || jQuery.noConflict(true);\r\n\r\n    (function($) {\r\n        if (!_spBodyOnLoadCalled) {\r\n            _spBodyOnLoadFunctions.push(pageLoad);\r\n        } else {\r\n            pageLoad();\r\n        }\r\n\r\n        function pageLoad() {\r\n            $(\'#pageTitle span\').text(\'Hello from jQuery\');\r\n        }\r\n\r\n        RegisterModuleInit(_spPageContextInfo.webServerRelativeUrl + \'/appname/script.js\', pageLoad);\r\n\r\n    })(window.myappName$);</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReadyInCode</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInCode_Init</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReadyInCode.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReadyInCode</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidJQueryDocumentReadyInCode.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>m$.ready(function () {\r\n        // DO STUFF\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReadyInCode</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInCode_mQuery</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReadyInCode.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReadyInCode</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidJQueryDocumentReadyInCode.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReadyInCode</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInCode_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReadyInCode.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReadyInCode</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidJQueryDocumentReadyInCode.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>window.myappName$ = window.myappName$ || jQuery.noConflict(true);\r\n\r\n    (function ($) {\r\n        if (!_spBodyOnLoadCalled) {\r\n            _spBodyOnLoadFunctions.push(pageLoad);\r\n        } else {\r\n            pageLoad();\r\n        }\r\n\r\n        function pageLoad() {\r\n            $(\'#pageTitle span\').text(\'Hello from jQuery\');\r\n        }\r\n\r\n        RegisterModuleInit(_spPageContextInfo.webServerRelativeUrl + \'appname/script.js\', pageLoad);\r\n\r\n    })(window.myappName$);</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInControl_Init</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>m$.ready(function () {\r\n        // DO STUFF\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInControl_mQuery</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInControl_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInJSFile_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInMasterPage_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInPage_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;sharepoint:spdatasource runat=\"server\" id=\"dsPeople\" datasourcemode=\"ListItem\" useinternalname=\"true\"&gt;\r\n      &lt;selectparameters&gt;\r\n        &lt;asp:parameter name=\"WebUrl\" defaultvalue=\"/configuration/\"&gt;&lt;/asp:parameter&gt;\r\n        &lt;asp:parameter name=\"ListID\" defaultvalue=\"34F91B0C-FCF2-455A-ABBA-67724FB4024A\"&gt;&lt;/asp:parameter&gt;\r\n        &lt;asp:parameter name=\"ListItemID\" defaultvalue=\"1\"&gt;&lt;/asp:parameter&gt;\r\n      &lt;/selectparameters&gt;\r\n    &lt;/sharepoint:spdatasource&gt;\r\n\r\n    &lt;asp:gridview id=\"grdPeople\" runat=\"server\" datasourceid=\"dsPeople\" autogeneratecolumns=\"False\"&gt;\r\n      &lt;columns&gt;\r\n        &lt;asp:boundfield datafield=\"FullName\" headertext=\"Blogger name\"&gt;&lt;/asp:boundfield&gt;\r\n        &lt;asp:boundfield datafield=\"WorkCity\" headertext=\"City\"&gt;&lt;/asp:boundfield&gt;\r\n        &lt;asp:boundfield datafield=\"Blog_x0020_URL\" headertext=\"Blog URL\"&gt;&lt;/asp:boundfield&gt;\r\n      &lt;/columns&gt;\r\n    &lt;/asp:gridview&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>SPDataSourceScopeDoesNotDefinedInPage</ClassName>\r\n  <MethodName>CorrectSPDataSourceScope</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>SPDataSourceScopeDoesNotDefinedInPage.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SPDataSourceScopeDoesNotDefinedInPage</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\aspnet</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\aspnet\\SPDataSourceScopeDoesNotDefinedInPage.xml</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;contenttype id=\"0x010100...\" name=\"MyContentType\" group=\"Project 1\" description=\"Groovy\" inherits=\"TRUE\" version=\"0\"&gt;\r\n      &lt;fieldrefs&gt;\r\n        &lt;fieldref id=\"{99F38C7E-0493-4beb-B1AE-2E2396B78BA2}\" name=\"NiceNewField\"&gt;&lt;/fieldref&gt;\r\n        &lt;!-- Needed to make the XXZ Widget work and this comment will break the content type! --&gt;\r\n        &lt;fieldref id=\"{F55C4D88-1F2E-4ad9-AAA8-819AF4EE7EE8}\" name=\"PublishingPageContent\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{D6E31868-E402-4c28-BCDD-F8C517A7897B}\" name=\"CommentingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{1B14D023-939E-497e-9621-21CA3FDE7DDD}\" name=\"RatingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{EBDF37A6-5DA2-48a2-9493-FCFEDD40598E}\" name=\"TaggingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{D33453AC-5B1B-4A04-9673-CFBA8368195D}\" name=\"Keywords\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{A45C395D-BBBF-47D8-9A46-3A3E070EB535}\" name=\"KeywordsTaxHTField0\" hidden=\"TRUE\"&gt;&lt;/fieldref&gt;\r\n      &lt;/fieldrefs&gt;\r\n    &lt;/contenttype&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>AvoidCommentsForContentType</ClassName>\r\n  <MethodName>IncorrectContentTypeWithComments</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidCommentsForContentType.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidCommentsForContentType</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\AvoidCommentsForContentType.xml</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;contenttype id=\"0x010100...\" name=\"MyContentType\" group=\"Project 1\" description=\"Groovy\" inherits=\"TRUE\" version=\"0\"&gt;\r\n      &lt;fieldrefs&gt;\r\n        &lt;fieldref id=\"{99F38C7E-0493-4beb-B1AE-2E2396B78BA2}\" name=\"NiceNewField\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{F55C4D88-1F2E-4ad9-AAA8-819AF4EE7EE8}\" name=\"PublishingPageContent\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{D6E31868-E402-4c28-BCDD-F8C517A7897B}\" name=\"CommentingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{1B14D023-939E-497e-9621-21CA3FDE7DDD}\" name=\"RatingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{EBDF37A6-5DA2-48a2-9493-FCFEDD40598E}\" name=\"TaggingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{D33453AC-5B1B-4A04-9673-CFBA8368195D}\" name=\"Keywords\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{A45C395D-BBBF-47D8-9A46-3A3E070EB535}\" name=\"KeywordsTaxHTField0\" hidden=\"TRUE\"&gt;&lt;/fieldref&gt;\r\n      &lt;/fieldrefs&gt;\r\n    &lt;/contenttype&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>AvoidCommentsForContentType</ClassName>\r\n  <MethodName>CorrectContentTypeWithComments</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidCommentsForContentType.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidCommentsForContentType</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\AvoidCommentsForContentType.xml</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;metadata&gt;\r\n      &lt;contenttypes&gt;\r\n        &lt;contenttyperef id=\"0x0100EDFEDEA571A241FD80430F4D48A91346\"&gt;&lt;/contenttyperef&gt;\r\n        &lt;contenttyperef id=\"0x0120\"&gt;&lt;/contenttyperef&gt;\r\n      &lt;/contenttypes&gt;\r\n      &lt;fields&gt;&lt;/fields&gt;\r\n      &lt;views&gt; ... &lt;/views&gt;\r\n      &lt;forms&gt; ... &lt;/forms&gt;\r\n    &lt;/metadata&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>AvoidListContentTypes</ClassName>\r\n  <MethodName>CorrectContentTypesInList</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidListContentTypes.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidListContentTypes</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\AvoidListContentTypes.xml</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;list xmlns:ows=\"Microsoft SharePoint\" title=\"List title\" other=\"\" attributes=\"\"&gt;\r\n      &lt;metadata&gt;\r\n        &lt;contenttypes&gt;\r\n          &lt;contenttyperef id=\"0x0100EDFEDEA571A241FD80430F4D48A91346\"&gt;&lt;/contenttyperef&gt;\r\n          &lt;contenttyperef id=\"0x0120\"&gt;&lt;/contenttyperef&gt;\r\n        &lt;/contenttypes&gt;\r\n        &lt;fields&gt;\r\n        &lt;/fields&gt;\r\n        &lt;views&gt;\r\n        &lt;/views&gt;\r\n        &lt;forms&gt;\r\n        &lt;/forms&gt;\r\n      &lt;/metadata&gt;\r\n    &lt;/list&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>DeclareEmptyFieldsElement</ClassName>\r\n  <MethodName>DeclareEmptyFields</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DeclareEmptyFieldsElement.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DeclareEmptyFieldsElement</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\DeclareEmptyFieldsElement.xml</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;field group=\"My group\" id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Note\" displayname=\"Content\" description=\"Brief description.\" required=\"TRUE\" indexed=\"TRUE\" numlines=\"6\" name=\"Name1\" staticname=\"Name1\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>DoNotIndexNoteField</ClassName>\r\n  <MethodName>IncorrectNoteFieldXml</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DoNotIndexNoteField.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotIndexNoteField</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\DoNotIndexNoteField.xml</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;field group=\"My group\" id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Note\" displayname=\"Content\" description=\"Brief description.\" required=\"TRUE\" numlines=\"6\" name=\"Name1\" staticname=\"Name1\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>DoNotIndexNoteField</ClassName>\r\n  <MethodName>CorrectNoteFieldXml</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DoNotIndexNoteField.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotIndexNoteField</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\DoNotIndexNoteField.xml</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;field id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Text\" name=\"customerID\" staticname=\"customerID\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;\r\n\r\n    &lt;field id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Text\" name=\"clientId\" staticname=\"clientId\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;\r\n\r\n    &lt;field id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Text\" name=\"documentID\" staticname=\"documentID\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>MixedIDInFieldName</ClassName>\r\n  <MethodName>IncorrectNoteFieldXml</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>MixedIDInFieldName.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>MixedIDInFieldName</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\MixedIDInFieldName.xml</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;properties&gt;\r\n      &lt;property name=\"Title\" type=\"string\"&gt;VisualWebPart1&lt;/property&gt;\r\n      &lt;property name=\"TitleIconImageUrl\" type=\"string\"&gt;/_layouts/images/Adicodes/AdicodesIcon.png&lt;/property&gt;\r\n      &lt;property name=\"CatalogIconImageUrl\" type=\"string\"&gt;/_layouts/images/Adicodes/AdicodesIcon.png&lt;/property&gt;\r\n    &lt;/properties&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>WebPartDefinitionMightBeImproved</ClassName>\r\n  <MethodName>IncorrectNoteFieldXml</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>WebPartDefinitionMightBeImproved.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>WebPartDefinitionMightBeImproved</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\WebPartDefinitionMightBeImproved.xml</SourceFilePath>\r\n</DocSample>")
            });
        public static class AvoidSPObjectNameStringComparison
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>AvoidSPObjectNameStringComparison</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>InappropriateComparison</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void InappropriateComparison(SPSite site)\r\n        {\r\n            var session = new TaxonomySession(site);\r\n            var termStore = session.TermStores[\"Company\"];\r\n\r\n            var group = termStore.Groups[\"HR\"];\r\n            var termSet = group.TermSets[\"Review\"];\r\n            var term = termSet.Terms[\"Year 2012\"];\r\n\r\n            // wrong\r\n            if (group.Name != \"HR\")\r\n            {\r\n                // wrong\r\n                if (term.Name != \"Review\")\r\n                {\r\n                    // Do stuff\r\n                }\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var session = new TaxonomySession(site);\r\n            var termStore = session.TermStores[\"Company\"];\r\n\r\n            var group = termStore.Groups[\"HR\"];\r\n            var termSet = group.TermSets[\"Review\"];\r\n            var term = termSet.Terms[\"Year 2012\"];\r\n\r\n            // wrong\r\n            if (group.Name != \"HR\")\r\n            {\r\n                // wrong\r\n                if (term.Name != \"Review\")\r\n                {\r\n                    // Do stuff\r\n                }\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>AvoidSPObjectNameStringComparison</ClassName>\r\n  <MethodName>InappropriateComparison</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.AvoidSPObjectNameStringComparison.InappropriateComparison</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.AvoidSPObjectNameStringComparison</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>AvoidSPObjectNameStringComparison.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidSPObjectNameStringComparison</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidSPObjectNameStringComparison.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample InappropriateComparison = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>AvoidSPObjectNameStringComparison</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>InappropriateComparison</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void InappropriateComparison(SPSite site)\r\n        {\r\n            var session = new TaxonomySession(site);\r\n            var termStore = session.TermStores[\"Company\"];\r\n\r\n            var group = termStore.Groups[\"HR\"];\r\n            var termSet = group.TermSets[\"Review\"];\r\n            var term = termSet.Terms[\"Year 2012\"];\r\n\r\n            // wrong\r\n            if (group.Name != \"HR\")\r\n            {\r\n                // wrong\r\n                if (term.Name != \"Review\")\r\n                {\r\n                    // Do stuff\r\n                }\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var session = new TaxonomySession(site);\r\n            var termStore = session.TermStores[\"Company\"];\r\n\r\n            var group = termStore.Groups[\"HR\"];\r\n            var termSet = group.TermSets[\"Review\"];\r\n            var term = termSet.Terms[\"Year 2012\"];\r\n\r\n            // wrong\r\n            if (group.Name != \"HR\")\r\n            {\r\n                // wrong\r\n                if (term.Name != \"Review\")\r\n                {\r\n                    // Do stuff\r\n                }\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>AvoidSPObjectNameStringComparison</ClassName>\r\n  <MethodName>InappropriateComparison</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.AvoidSPObjectNameStringComparison.InappropriateComparison</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.AvoidSPObjectNameStringComparison</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>AvoidSPObjectNameStringComparison.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidSPObjectNameStringComparison</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidSPObjectNameStringComparison.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class AvoidUsingSPListItemFile
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>AvoidUsingSPListItemFile</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>AppropriateSPListItemSPFileUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void AppropriateSPListItemSPFileUsage(SPListItem item)\r\n        {\r\n            var file = item.Web.GetFile(item.UniqueId);\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var file = item.Web.GetFile(item.UniqueId);</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>AvoidUsingSPListItemFile</ClassName>\r\n  <MethodName>AppropriateSPListItemSPFileUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.AvoidUsingSPListItemFile.AppropriateSPListItemSPFileUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.AvoidUsingSPListItemFile</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>AvoidUsingSPListItemFile.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidUsingSPListItemFile</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidUsingSPListItemFile.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample AppropriateSPListItemSPFileUsage = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>AvoidUsingSPListItemFile</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>AppropriateSPListItemSPFileUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void AppropriateSPListItemSPFileUsage(SPListItem item)\r\n        {\r\n            var file = item.Web.GetFile(item.UniqueId);\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var file = item.Web.GetFile(item.UniqueId);</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>AvoidUsingSPListItemFile</ClassName>\r\n  <MethodName>AppropriateSPListItemSPFileUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.AvoidUsingSPListItemFile.AppropriateSPListItemSPFileUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.AvoidUsingSPListItemFile</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>AvoidUsingSPListItemFile.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidUsingSPListItemFile</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidUsingSPListItemFile.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class DoNotSuppressExceptions
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotSuppressExceptions</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CallerMethod</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CallerMethod(ControlCollection controlCollection)\r\n        {\r\n            try\r\n            {\r\n                CalledMethod(\"Test\");\r\n            }\r\n            // DO NOT CATCH USAGE EXCEPTION\r\n            catch (ArgumentNotSpecifiedException ex)\r\n            {\r\n                // special handling for ArgumentNotSpecifiedException\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // log it\r\n                throw new WrappedException(\"Method XXX call  error occurred\", ex); // wrapped &amp; chained exceptions.\r\n            }\r\n            finally\r\n            {\r\n                // normal clean goes here (like closing open files).\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>try\r\n            {\r\n                CalledMethod(\"Test\");\r\n            }\r\n            // DO NOT CATCH USAGE EXCEPTION\r\n            catch (ArgumentNotSpecifiedException ex)\r\n            {\r\n                // special handling for ArgumentNotSpecifiedException\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // log it\r\n                throw new WrappedException(\"Method XXX call  error occurred\", ex); // wrapped &amp; chained exceptions.\r\n            }\r\n            finally\r\n            {\r\n                // normal clean goes here (like closing open files).\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotSuppressExceptions</ClassName>\r\n  <MethodName>CallerMethod</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotSuppressExceptions.CallerMethod</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotSuppressExceptions</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotSuppressExceptions.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotSuppressExceptions</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotSuppressExceptions.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotSuppressExceptions</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CalledMethod</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CalledMethod(string p1)\r\n        {\r\n            // Validate parameter and throw \"usage exception\"\r\n            if (String.IsNullOrEmpty(p1))\r\n                throw new ArgumentNotSpecifiedException(\"Parameter p1 must be specified\");\r\n\r\n            // Here we save data to the storage and the \"system exception\" could be raised\r\n            try\r\n            {\r\n                DAL.Save(p1);\r\n            }\r\n            catch (SqlException e)\r\n            {\r\n                if (e.ErrorCode != NO_ROW_ERROR)\r\n                {\r\n                    // filter out NoDataFound.\r\n                    // do special cleanup, like maybe closing the \"dirty\" database connection.\r\n                    // throw e; &lt;- DO NOT DO IT. This destroys the strack trace information!\r\n                    throw; // this preserves the stack trace\r\n                }\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// Validate parameter and throw \"usage exception\"\r\n            if (String.IsNullOrEmpty(p1))\r\n                throw new ArgumentNotSpecifiedException(\"Parameter p1 must be specified\");\r\n\r\n            // Here we save data to the storage and the \"system exception\" could be raised\r\n            try\r\n            {\r\n                DAL.Save(p1);\r\n            }\r\n            catch (SqlException e)\r\n            {\r\n                if (e.ErrorCode != NO_ROW_ERROR)\r\n                {\r\n                    // filter out NoDataFound.\r\n                    // do special cleanup, like maybe closing the \"dirty\" database connection.\r\n                    // throw e; &lt;- DO NOT DO IT. This destroys the strack trace information!\r\n                    throw; // this preserves the stack trace\r\n                }\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotSuppressExceptions</ClassName>\r\n  <MethodName>CalledMethod</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotSuppressExceptions.CalledMethod</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotSuppressExceptions</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotSuppressExceptions.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotSuppressExceptions</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotSuppressExceptions.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample CallerMethod = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotSuppressExceptions</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CallerMethod</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CallerMethod(ControlCollection controlCollection)\r\n        {\r\n            try\r\n            {\r\n                CalledMethod(\"Test\");\r\n            }\r\n            // DO NOT CATCH USAGE EXCEPTION\r\n            catch (ArgumentNotSpecifiedException ex)\r\n            {\r\n                // special handling for ArgumentNotSpecifiedException\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // log it\r\n                throw new WrappedException(\"Method XXX call  error occurred\", ex); // wrapped &amp; chained exceptions.\r\n            }\r\n            finally\r\n            {\r\n                // normal clean goes here (like closing open files).\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>try\r\n            {\r\n                CalledMethod(\"Test\");\r\n            }\r\n            // DO NOT CATCH USAGE EXCEPTION\r\n            catch (ArgumentNotSpecifiedException ex)\r\n            {\r\n                // special handling for ArgumentNotSpecifiedException\r\n            }\r\n            catch (Exception ex)\r\n            {\r\n                // log it\r\n                throw new WrappedException(\"Method XXX call  error occurred\", ex); // wrapped &amp; chained exceptions.\r\n            }\r\n            finally\r\n            {\r\n                // normal clean goes here (like closing open files).\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotSuppressExceptions</ClassName>\r\n  <MethodName>CallerMethod</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotSuppressExceptions.CallerMethod</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotSuppressExceptions</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotSuppressExceptions.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotSuppressExceptions</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotSuppressExceptions.cs</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample CalledMethod = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotSuppressExceptions</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CalledMethod</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CalledMethod(string p1)\r\n        {\r\n            // Validate parameter and throw \"usage exception\"\r\n            if (String.IsNullOrEmpty(p1))\r\n                throw new ArgumentNotSpecifiedException(\"Parameter p1 must be specified\");\r\n\r\n            // Here we save data to the storage and the \"system exception\" could be raised\r\n            try\r\n            {\r\n                DAL.Save(p1);\r\n            }\r\n            catch (SqlException e)\r\n            {\r\n                if (e.ErrorCode != NO_ROW_ERROR)\r\n                {\r\n                    // filter out NoDataFound.\r\n                    // do special cleanup, like maybe closing the \"dirty\" database connection.\r\n                    // throw e; &lt;- DO NOT DO IT. This destroys the strack trace information!\r\n                    throw; // this preserves the stack trace\r\n                }\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// Validate parameter and throw \"usage exception\"\r\n            if (String.IsNullOrEmpty(p1))\r\n                throw new ArgumentNotSpecifiedException(\"Parameter p1 must be specified\");\r\n\r\n            // Here we save data to the storage and the \"system exception\" could be raised\r\n            try\r\n            {\r\n                DAL.Save(p1);\r\n            }\r\n            catch (SqlException e)\r\n            {\r\n                if (e.ErrorCode != NO_ROW_ERROR)\r\n                {\r\n                    // filter out NoDataFound.\r\n                    // do special cleanup, like maybe closing the \"dirty\" database connection.\r\n                    // throw e; &lt;- DO NOT DO IT. This destroys the strack trace information!\r\n                    throw; // this preserves the stack trace\r\n                }\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotSuppressExceptions</ClassName>\r\n  <MethodName>CalledMethod</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotSuppressExceptions.CalledMethod</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotSuppressExceptions</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotSuppressExceptions.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotSuppressExceptions</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotSuppressExceptions.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class DAL
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DAL</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>Save</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>public static void Save(string p1)\r\n        {\r\n            throw new NotImplementedException();\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>throw new NotImplementedException();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DAL</ClassName>\r\n  <MethodName>Save</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DAL.Save</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DAL</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotSuppressExceptions.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotSuppressExceptions</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotSuppressExceptions.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample Save = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DAL</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>Save</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>public static void Save(string p1)\r\n        {\r\n            throw new NotImplementedException();\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>throw new NotImplementedException();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DAL</ClassName>\r\n  <MethodName>Save</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DAL.Save</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DAL</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotSuppressExceptions.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotSuppressExceptions</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotSuppressExceptions.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class DoNotUseEntityEditorEntities
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseEntityEditorEntities</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>GetPeoplePickerUser</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public SPPrincipalInfo GetPeoplePickerUser(ControlCollection controlCollection)\r\n        {\r\n            SPPrincipalInfo result = null;\r\n\r\n            foreach (Control control in controlCollection)\r\n            {\r\n                var peopleEditor = control as PeopleEditor;\r\n                if (peopleEditor != null &amp;&amp; peopleEditor.Entities.Count == 1)\r\n                {\r\n                    PickerEntity pickerEntity = (PickerEntity)peopleEditor.Entities[0];\r\n                    // get principal info code here ...\r\n                    return result;\r\n                }\r\n                if (control.HasControls())\r\n                {\r\n                    result = GetPeoplePickerUser(control.Controls);\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>SPPrincipalInfo result = null;\r\n\r\n            foreach (Control control in controlCollection)\r\n            {\r\n                var peopleEditor = control as PeopleEditor;\r\n                if (peopleEditor != null &amp;&amp; peopleEditor.Entities.Count == 1)\r\n                {\r\n                    PickerEntity pickerEntity = (PickerEntity)peopleEditor.Entities[0];\r\n                    // get principal info code here ...\r\n                    return result;\r\n                }\r\n                if (control.HasControls())\r\n                {\r\n                    result = GetPeoplePickerUser(control.Controls);\r\n                }\r\n            }\r\n\r\n            return result;</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotUseEntityEditorEntities</ClassName>\r\n  <MethodName>GetPeoplePickerUser</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotUseEntityEditorEntities.GetPeoplePickerUser</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotUseEntityEditorEntities</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotUseEntityEditorEntities.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseEntityEditorEntities</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseEntityEditorEntities.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample GetPeoplePickerUser = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseEntityEditorEntities</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>GetPeoplePickerUser</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public SPPrincipalInfo GetPeoplePickerUser(ControlCollection controlCollection)\r\n        {\r\n            SPPrincipalInfo result = null;\r\n\r\n            foreach (Control control in controlCollection)\r\n            {\r\n                var peopleEditor = control as PeopleEditor;\r\n                if (peopleEditor != null &amp;&amp; peopleEditor.Entities.Count == 1)\r\n                {\r\n                    PickerEntity pickerEntity = (PickerEntity)peopleEditor.Entities[0];\r\n                    // get principal info code here ...\r\n                    return result;\r\n                }\r\n                if (control.HasControls())\r\n                {\r\n                    result = GetPeoplePickerUser(control.Controls);\r\n                }\r\n            }\r\n\r\n            return result;\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>SPPrincipalInfo result = null;\r\n\r\n            foreach (Control control in controlCollection)\r\n            {\r\n                var peopleEditor = control as PeopleEditor;\r\n                if (peopleEditor != null &amp;&amp; peopleEditor.Entities.Count == 1)\r\n                {\r\n                    PickerEntity pickerEntity = (PickerEntity)peopleEditor.Entities[0];\r\n                    // get principal info code here ...\r\n                    return result;\r\n                }\r\n                if (control.HasControls())\r\n                {\r\n                    result = GetPeoplePickerUser(control.Controls);\r\n                }\r\n            }\r\n\r\n            return result;</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotUseEntityEditorEntities</ClassName>\r\n  <MethodName>GetPeoplePickerUser</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotUseEntityEditorEntities.GetPeoplePickerUser</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.Views.ReSP.Inspections.csharp.DoNotUseEntityEditorEntities</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotUseEntityEditorEntities.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseEntityEditorEntities</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseEntityEditorEntities.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class DoNotUseSPContentTypeFieldsToAddOrDelete
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContentTypeFieldsToAddOrDelete</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>InappropriateSPContentTypeFieldsUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void InappropriateSPContentTypeFieldsUsage(SPWeb web, string contentTypeName)\r\n        {\r\n            var ct = web.ContentTypes[contentTypeName];\r\n            ct.Fields.Add(\"NewField\", SPFieldType.Boolean, true);\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var ct = web.ContentTypes[contentTypeName];\r\n            ct.Fields.Add(\"NewField\", SPFieldType.Boolean, true);</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseSPContentTypeFieldsToAddOrDelete</ClassName>\r\n  <MethodName>InappropriateSPContentTypeFieldsUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete.InappropriateSPContentTypeFieldsUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete</ClassFullName>\r\n  <MethodParametersCount>2</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContentTypeFieldsToAddOrDelete</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContentTypeFieldsToAddOrDelete</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>AppropriateAddingFields</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void AppropriateAddingFields(SPContentType contentType, SPField field)\r\n        {\r\n            //Check if the Field reference does not exists already\r\n            if (!contentType.Fields.ContainsField(field.Title))\r\n            {\r\n                contentType.FieldLinks.Add(new SPFieldLink(field));\r\n                contentType.Update();\r\n            }\r\n            else\r\n            {\r\n                //Do Nothing\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>//Check if the Field reference does not exists already\r\n            if (!contentType.Fields.ContainsField(field.Title))\r\n            {\r\n                contentType.FieldLinks.Add(new SPFieldLink(field));\r\n                contentType.Update();\r\n            }\r\n            else\r\n            {\r\n                //Do Nothing\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseSPContentTypeFieldsToAddOrDelete</ClassName>\r\n  <MethodName>AppropriateAddingFields</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete.AppropriateAddingFields</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete</ClassFullName>\r\n  <MethodParametersCount>2</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContentTypeFieldsToAddOrDelete</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContentTypeFieldsToAddOrDelete</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>AppropriateDeletingFields</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void AppropriateDeletingFields(SPContentType contentType, SPField field)\r\n        {\r\n            //Check if the Field reference exists\r\n            if (contentType.Fields.ContainsField(field.Title))\r\n            {\r\n                contentType.FieldLinks.Delete(field.Title);\r\n                contentType.Update();\r\n            }\r\n            else\r\n            {\r\n                //Do Nothing\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>//Check if the Field reference exists\r\n            if (contentType.Fields.ContainsField(field.Title))\r\n            {\r\n                contentType.FieldLinks.Delete(field.Title);\r\n                contentType.Update();\r\n            }\r\n            else\r\n            {\r\n                //Do Nothing\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseSPContentTypeFieldsToAddOrDelete</ClassName>\r\n  <MethodName>AppropriateDeletingFields</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete.AppropriateDeletingFields</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete</ClassFullName>\r\n  <MethodParametersCount>2</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContentTypeFieldsToAddOrDelete</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample InappropriateSPContentTypeFieldsUsage = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContentTypeFieldsToAddOrDelete</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>InappropriateSPContentTypeFieldsUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void InappropriateSPContentTypeFieldsUsage(SPWeb web, string contentTypeName)\r\n        {\r\n            var ct = web.ContentTypes[contentTypeName];\r\n            ct.Fields.Add(\"NewField\", SPFieldType.Boolean, true);\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var ct = web.ContentTypes[contentTypeName];\r\n            ct.Fields.Add(\"NewField\", SPFieldType.Boolean, true);</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseSPContentTypeFieldsToAddOrDelete</ClassName>\r\n  <MethodName>InappropriateSPContentTypeFieldsUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete.InappropriateSPContentTypeFieldsUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete</ClassFullName>\r\n  <MethodParametersCount>2</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContentTypeFieldsToAddOrDelete</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample AppropriateAddingFields = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContentTypeFieldsToAddOrDelete</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>AppropriateAddingFields</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void AppropriateAddingFields(SPContentType contentType, SPField field)\r\n        {\r\n            //Check if the Field reference does not exists already\r\n            if (!contentType.Fields.ContainsField(field.Title))\r\n            {\r\n                contentType.FieldLinks.Add(new SPFieldLink(field));\r\n                contentType.Update();\r\n            }\r\n            else\r\n            {\r\n                //Do Nothing\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>//Check if the Field reference does not exists already\r\n            if (!contentType.Fields.ContainsField(field.Title))\r\n            {\r\n                contentType.FieldLinks.Add(new SPFieldLink(field));\r\n                contentType.Update();\r\n            }\r\n            else\r\n            {\r\n                //Do Nothing\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseSPContentTypeFieldsToAddOrDelete</ClassName>\r\n  <MethodName>AppropriateAddingFields</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete.AppropriateAddingFields</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete</ClassFullName>\r\n  <MethodParametersCount>2</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContentTypeFieldsToAddOrDelete</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample AppropriateDeletingFields = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContentTypeFieldsToAddOrDelete</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>AppropriateDeletingFields</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void AppropriateDeletingFields(SPContentType contentType, SPField field)\r\n        {\r\n            //Check if the Field reference exists\r\n            if (contentType.Fields.ContainsField(field.Title))\r\n            {\r\n                contentType.FieldLinks.Delete(field.Title);\r\n                contentType.Update();\r\n            }\r\n            else\r\n            {\r\n                //Do Nothing\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>//Check if the Field reference exists\r\n            if (contentType.Fields.ContainsField(field.Title))\r\n            {\r\n                contentType.FieldLinks.Delete(field.Title);\r\n                contentType.Update();\r\n            }\r\n            else\r\n            {\r\n                //Do Nothing\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseSPContentTypeFieldsToAddOrDelete</ClassName>\r\n  <MethodName>AppropriateDeletingFields</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete.AppropriateDeletingFields</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseSPContentTypeFieldsToAddOrDelete</ClassFullName>\r\n  <MethodParametersCount>2</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContentTypeFieldsToAddOrDelete</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContentTypeFieldsToAddOrDelete.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class DoNotUseSPContextObjectInDisposedBlock
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContextObjectInDisposedBlock</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>InapropriateSPContextUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        \r\n        public void InapropriateSPContextUsage()\r\n        {\r\n            using (var site = SPContext.Current.Site)\r\n            {\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>using (var site = SPContext.Current.Site)\r\n            {\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotUseSPContextObjectInDisposedBlock</ClassName>\r\n  <MethodName>InapropriateSPContextUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp.DoNotUseSPContextObjectInDisposedBlock.InapropriateSPContextUsage</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp.DoNotUseSPContextObjectInDisposedBlock</ClassFullName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContextObjectInDisposedBlock.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContextObjectInDisposedBlock</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContextObjectInDisposedBlock.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContextObjectInDisposedBlock</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPContextUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        \r\n        public void CorrectSPContextUsage()\r\n        {\r\n            using (var site = new SPSite(SPContext.Current.Site.ID))\r\n            {\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>using (var site = new SPSite(SPContext.Current.Site.ID))\r\n            {\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotUseSPContextObjectInDisposedBlock</ClassName>\r\n  <MethodName>CorrectSPContextUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp.DoNotUseSPContextObjectInDisposedBlock.CorrectSPContextUsage</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp.DoNotUseSPContextObjectInDisposedBlock</ClassFullName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContextObjectInDisposedBlock.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContextObjectInDisposedBlock</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContextObjectInDisposedBlock.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample InapropriateSPContextUsage = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContextObjectInDisposedBlock</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>InapropriateSPContextUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        \r\n        public void InapropriateSPContextUsage()\r\n        {\r\n            using (var site = SPContext.Current.Site)\r\n            {\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>using (var site = SPContext.Current.Site)\r\n            {\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotUseSPContextObjectInDisposedBlock</ClassName>\r\n  <MethodName>InapropriateSPContextUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp.DoNotUseSPContextObjectInDisposedBlock.InapropriateSPContextUsage</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp.DoNotUseSPContextObjectInDisposedBlock</ClassFullName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContextObjectInDisposedBlock.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContextObjectInDisposedBlock</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContextObjectInDisposedBlock.cs</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample CorrectSPContextUsage = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseSPContextObjectInDisposedBlock</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPContextUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        \r\n        public void CorrectSPContextUsage()\r\n        {\r\n            using (var site = new SPSite(SPContext.Current.Site.ID))\r\n            {\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>using (var site = new SPSite(SPContext.Current.Site.ID))\r\n            {\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp</Namespace>\r\n  <ClassName>DoNotUseSPContextObjectInDisposedBlock</ClassName>\r\n  <MethodName>CorrectSPContextUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp.DoNotUseSPContextObjectInDisposedBlock.CorrectSPContextUsage</MethodFullName>\r\n  <ClassFullName>SubPointSolutions.Docs.Views.ReSP.Inspections.csharp.DoNotUseSPContextObjectInDisposedBlock</ClassFullName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DoNotUseSPContextObjectInDisposedBlock.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseSPContextObjectInDisposedBlock</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseSPContextObjectInDisposedBlock.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class DoNotUseUnsafeTypeConversionOnSPListItem
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseUnsafeTypeConversionOnSPListItem</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>IncorrectSPListItemCast</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void IncorrectSPListItemCast(SPListItem item)\r\n        {\r\n            string date1 = item[\"Date\"].ToString();\r\n            DateTime date2 = (DateTime)item[\"Date\"];\r\n            int x = ((SPFieldUserValue)item[\"User\"]).LookupId;\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>string date1 = item[\"Date\"].ToString();\r\n            DateTime date2 = (DateTime)item[\"Date\"];\r\n            int x = ((SPFieldUserValue)item[\"User\"]).LookupId;</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseUnsafeTypeConversionOnSPListItem</ClassName>\r\n  <MethodName>IncorrectSPListItemCast</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseUnsafeTypeConversionOnSPListItem.IncorrectSPListItemCast</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseUnsafeTypeConversionOnSPListItem</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotUseUnsafeTypeConversionOnSPListItem.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseUnsafeTypeConversionOnSPListItem</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseUnsafeTypeConversionOnSPListItem.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseUnsafeTypeConversionOnSPListItem</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPListItemCast</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPListItemCast(SPListItem item)\r\n        {\r\n            DateTime date1 = Convert.ToDateTime(item[\"Date\"]);\r\n            DateTime? date2 = item[\"Date\"] as DateTime?;\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>DateTime date1 = Convert.ToDateTime(item[\"Date\"]);\r\n            DateTime? date2 = item[\"Date\"] as DateTime?;</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseUnsafeTypeConversionOnSPListItem</ClassName>\r\n  <MethodName>CorrectSPListItemCast</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseUnsafeTypeConversionOnSPListItem.CorrectSPListItemCast</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseUnsafeTypeConversionOnSPListItem</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotUseUnsafeTypeConversionOnSPListItem.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseUnsafeTypeConversionOnSPListItem</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseUnsafeTypeConversionOnSPListItem.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample IncorrectSPListItemCast = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseUnsafeTypeConversionOnSPListItem</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>IncorrectSPListItemCast</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void IncorrectSPListItemCast(SPListItem item)\r\n        {\r\n            string date1 = item[\"Date\"].ToString();\r\n            DateTime date2 = (DateTime)item[\"Date\"];\r\n            int x = ((SPFieldUserValue)item[\"User\"]).LookupId;\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>string date1 = item[\"Date\"].ToString();\r\n            DateTime date2 = (DateTime)item[\"Date\"];\r\n            int x = ((SPFieldUserValue)item[\"User\"]).LookupId;</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseUnsafeTypeConversionOnSPListItem</ClassName>\r\n  <MethodName>IncorrectSPListItemCast</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseUnsafeTypeConversionOnSPListItem.IncorrectSPListItemCast</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseUnsafeTypeConversionOnSPListItem</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotUseUnsafeTypeConversionOnSPListItem.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseUnsafeTypeConversionOnSPListItem</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseUnsafeTypeConversionOnSPListItem.cs</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample CorrectSPListItemCast = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>DoNotUseUnsafeTypeConversionOnSPListItem</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPListItemCast</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPListItemCast(SPListItem item)\r\n        {\r\n            DateTime date1 = Convert.ToDateTime(item[\"Date\"]);\r\n            DateTime? date2 = item[\"Date\"] as DateTime?;\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>DateTime date1 = Convert.ToDateTime(item[\"Date\"]);\r\n            DateTime? date2 = item[\"Date\"] as DateTime?;</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>DoNotUseUnsafeTypeConversionOnSPListItem</ClassName>\r\n  <MethodName>CorrectSPListItemCast</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseUnsafeTypeConversionOnSPListItem.CorrectSPListItemCast</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.DoNotUseUnsafeTypeConversionOnSPListItem</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>DoNotUseUnsafeTypeConversionOnSPListItem.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotUseUnsafeTypeConversionOnSPListItem</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\DoNotUseUnsafeTypeConversionOnSPListItem.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class InappropriateUsageOfSPListCollection
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>InappropriateUsageOfSPListCollection</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectListUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectListUsage(SPWeb web)\r\n        {\r\n            var listUrl = \"/lists/tasks\";\r\n            var taskList = web.GetList(SPUrlUtility.CombineUrl(web.Url, listUrl));\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var listUrl = \"/lists/tasks\";\r\n            var taskList = web.GetList(SPUrlUtility.CombineUrl(web.Url, listUrl));</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>InappropriateUsageOfSPListCollection</ClassName>\r\n  <MethodName>CorrectListUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.InappropriateUsageOfSPListCollection.CorrectListUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.InappropriateUsageOfSPListCollection</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>InappropriateUsageOfSPListCollection.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>InappropriateUsageOfSPListCollection</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\InappropriateUsageOfSPListCollection.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample CorrectListUsage = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>InappropriateUsageOfSPListCollection</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectListUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectListUsage(SPWeb web)\r\n        {\r\n            var listUrl = \"/lists/tasks\";\r\n            var taskList = web.GetList(SPUrlUtility.CombineUrl(web.Url, listUrl));\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var listUrl = \"/lists/tasks\";\r\n            var taskList = web.GetList(SPUrlUtility.CombineUrl(web.Url, listUrl));</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>InappropriateUsageOfSPListCollection</ClassName>\r\n  <MethodName>CorrectListUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.InappropriateUsageOfSPListCollection.CorrectListUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.InappropriateUsageOfSPListCollection</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>InappropriateUsageOfSPListCollection.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>InappropriateUsageOfSPListCollection</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\InappropriateUsageOfSPListCollection.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class OutOfContextRWEP
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>OutOfContextRWEP</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>TrustedConnectionSample</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void TrustedConnectionSample(SPWeb web)\r\n        {\r\n            // Windows credentials of the current user are used to authenticate against SQL Server and any &lt;user id=&gt; setting will be ignored \r\n            var sqlConnection = new SqlConnection(\"Data Source=SQLDevelopment; Initial Catalog=SQL2008; Integrated Security=SSPI;\");\r\n            var sqlCommand = new SqlCommand(\"SELECT * FROM [dbo].[Emplpoyees]\", sqlConnection);\r\n\r\n            var sqlConnection2 = new SqlConnection(\"Server=SQLDevelopment; Database=SQL2008; Trusted_Connection=True\");\r\n            var sqlCommand2 = new SqlCommand(\"SELECT * FROM [dbo].[Students]\", sqlConnection2);\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// Windows credentials of the current user are used to authenticate against SQL Server and any &lt;user id=&gt; setting will be ignored \r\n            var sqlConnection = new SqlConnection(\"Data Source=SQLDevelopment; Initial Catalog=SQL2008; Integrated Security=SSPI;\");\r\n            var sqlCommand = new SqlCommand(\"SELECT * FROM [dbo].[Emplpoyees]\", sqlConnection);\r\n\r\n            var sqlConnection2 = new SqlConnection(\"Server=SQLDevelopment; Database=SQL2008; Trusted_Connection=True\");\r\n            var sqlCommand2 = new SqlCommand(\"SELECT * FROM [dbo].[Students]\", sqlConnection2);</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>OutOfContextRWEP</ClassName>\r\n  <MethodName>TrustedConnectionSample</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.OutOfContextRWEP.TrustedConnectionSample</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.OutOfContextRWEP</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>OutOfContextRWEP.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>OutOfContextRWEP</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\OutOfContextRWEP.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample TrustedConnectionSample = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>OutOfContextRWEP</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>TrustedConnectionSample</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void TrustedConnectionSample(SPWeb web)\r\n        {\r\n            // Windows credentials of the current user are used to authenticate against SQL Server and any &lt;user id=&gt; setting will be ignored \r\n            var sqlConnection = new SqlConnection(\"Data Source=SQLDevelopment; Initial Catalog=SQL2008; Integrated Security=SSPI;\");\r\n            var sqlCommand = new SqlCommand(\"SELECT * FROM [dbo].[Emplpoyees]\", sqlConnection);\r\n\r\n            var sqlConnection2 = new SqlConnection(\"Server=SQLDevelopment; Database=SQL2008; Trusted_Connection=True\");\r\n            var sqlCommand2 = new SqlCommand(\"SELECT * FROM [dbo].[Students]\", sqlConnection2);\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// Windows credentials of the current user are used to authenticate against SQL Server and any &lt;user id=&gt; setting will be ignored \r\n            var sqlConnection = new SqlConnection(\"Data Source=SQLDevelopment; Initial Catalog=SQL2008; Integrated Security=SSPI;\");\r\n            var sqlCommand = new SqlCommand(\"SELECT * FROM [dbo].[Emplpoyees]\", sqlConnection);\r\n\r\n            var sqlConnection2 = new SqlConnection(\"Server=SQLDevelopment; Database=SQL2008; Trusted_Connection=True\");\r\n            var sqlCommand2 = new SqlCommand(\"SELECT * FROM [dbo].[Students]\", sqlConnection2);</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>OutOfContextRWEP</ClassName>\r\n  <MethodName>TrustedConnectionSample</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.OutOfContextRWEP.TrustedConnectionSample</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.OutOfContextRWEP</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>OutOfContextRWEP.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>OutOfContextRWEP</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\OutOfContextRWEP.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class PutSPFileExistsIntoTryCatchBlock
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>PutSPFileExistsIntoTryCatchBlock</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPFileExistsUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPFileExistsUsage(SPWeb web)\r\n        {\r\n            var defaultMasterUrl = \"/_catalogs/masterpage/default.master\";\r\n\r\n            if (web.AllProperties.ContainsKey(\"OldMasterUrl\"))\r\n            {\r\n                string oldMasterUrl = web.AllProperties[\"OldMasterUrl\"].ToString();\r\n                try\r\n                {\r\n                    var fileExists = web.GetFile(oldMasterUrl).Exists;\r\n                    web.MasterUrl = oldMasterUrl;\r\n                }\r\n                catch (ArgumentException)\r\n                {\r\n                    web.MasterUrl = defaultMasterUrl;\r\n                }\r\n\r\n\r\n                var oldCustomUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n                try\r\n                {\r\n                    var fileExists = web.GetFile(oldCustomUrl).Exists;\r\n                    web.CustomMasterUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n                }\r\n                catch (ArgumentException)\r\n                {\r\n                    web.CustomMasterUrl = defaultMasterUrl;\r\n                }\r\n\r\n                web.AllProperties.Remove(\"OldMasterUrl\");\r\n                web.AllProperties.Remove(\"OldCustomMasterUrl\");\r\n            }\r\n            else\r\n            {\r\n                web.MasterUrl = defaultMasterUrl;\r\n                web.CustomMasterUrl = defaultMasterUrl;\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var defaultMasterUrl = \"/_catalogs/masterpage/default.master\";\r\n\r\n            if (web.AllProperties.ContainsKey(\"OldMasterUrl\"))\r\n            {\r\n                string oldMasterUrl = web.AllProperties[\"OldMasterUrl\"].ToString();\r\n                try\r\n                {\r\n                    var fileExists = web.GetFile(oldMasterUrl).Exists;\r\n                    web.MasterUrl = oldMasterUrl;\r\n                }\r\n                catch (ArgumentException)\r\n                {\r\n                    web.MasterUrl = defaultMasterUrl;\r\n                }\r\n\r\n\r\n                var oldCustomUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n                try\r\n                {\r\n                    var fileExists = web.GetFile(oldCustomUrl).Exists;\r\n                    web.CustomMasterUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n                }\r\n                catch (ArgumentException)\r\n                {\r\n                    web.CustomMasterUrl = defaultMasterUrl;\r\n                }\r\n\r\n                web.AllProperties.Remove(\"OldMasterUrl\");\r\n                web.AllProperties.Remove(\"OldCustomMasterUrl\");\r\n            }\r\n            else\r\n            {\r\n                web.MasterUrl = defaultMasterUrl;\r\n                web.CustomMasterUrl = defaultMasterUrl;\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>PutSPFileExistsIntoTryCatchBlock</ClassName>\r\n  <MethodName>CorrectSPFileExistsUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.PutSPFileExistsIntoTryCatchBlock.CorrectSPFileExistsUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.PutSPFileExistsIntoTryCatchBlock</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>PutSPFileExistsIntoTryCatchBlock.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>PutSPFileExistsIntoTryCatchBlock</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\PutSPFileExistsIntoTryCatchBlock.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample CorrectSPFileExistsUsage = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>PutSPFileExistsIntoTryCatchBlock</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPFileExistsUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPFileExistsUsage(SPWeb web)\r\n        {\r\n            var defaultMasterUrl = \"/_catalogs/masterpage/default.master\";\r\n\r\n            if (web.AllProperties.ContainsKey(\"OldMasterUrl\"))\r\n            {\r\n                string oldMasterUrl = web.AllProperties[\"OldMasterUrl\"].ToString();\r\n                try\r\n                {\r\n                    var fileExists = web.GetFile(oldMasterUrl).Exists;\r\n                    web.MasterUrl = oldMasterUrl;\r\n                }\r\n                catch (ArgumentException)\r\n                {\r\n                    web.MasterUrl = defaultMasterUrl;\r\n                }\r\n\r\n\r\n                var oldCustomUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n                try\r\n                {\r\n                    var fileExists = web.GetFile(oldCustomUrl).Exists;\r\n                    web.CustomMasterUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n                }\r\n                catch (ArgumentException)\r\n                {\r\n                    web.CustomMasterUrl = defaultMasterUrl;\r\n                }\r\n\r\n                web.AllProperties.Remove(\"OldMasterUrl\");\r\n                web.AllProperties.Remove(\"OldCustomMasterUrl\");\r\n            }\r\n            else\r\n            {\r\n                web.MasterUrl = defaultMasterUrl;\r\n                web.CustomMasterUrl = defaultMasterUrl;\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var defaultMasterUrl = \"/_catalogs/masterpage/default.master\";\r\n\r\n            if (web.AllProperties.ContainsKey(\"OldMasterUrl\"))\r\n            {\r\n                string oldMasterUrl = web.AllProperties[\"OldMasterUrl\"].ToString();\r\n                try\r\n                {\r\n                    var fileExists = web.GetFile(oldMasterUrl).Exists;\r\n                    web.MasterUrl = oldMasterUrl;\r\n                }\r\n                catch (ArgumentException)\r\n                {\r\n                    web.MasterUrl = defaultMasterUrl;\r\n                }\r\n\r\n\r\n                var oldCustomUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n                try\r\n                {\r\n                    var fileExists = web.GetFile(oldCustomUrl).Exists;\r\n                    web.CustomMasterUrl = web.AllProperties[\"OldCustomMasterUrl\"].ToString();\r\n                }\r\n                catch (ArgumentException)\r\n                {\r\n                    web.CustomMasterUrl = defaultMasterUrl;\r\n                }\r\n\r\n                web.AllProperties.Remove(\"OldMasterUrl\");\r\n                web.AllProperties.Remove(\"OldCustomMasterUrl\");\r\n            }\r\n            else\r\n            {\r\n                web.MasterUrl = defaultMasterUrl;\r\n                web.CustomMasterUrl = defaultMasterUrl;\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>PutSPFileExistsIntoTryCatchBlock</ClassName>\r\n  <MethodName>CorrectSPFileExistsUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.PutSPFileExistsIntoTryCatchBlock.CorrectSPFileExistsUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.PutSPFileExistsIntoTryCatchBlock</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>PutSPFileExistsIntoTryCatchBlock.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>PutSPFileExistsIntoTryCatchBlock</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\PutSPFileExistsIntoTryCatchBlock.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class SendMailFromWcfService
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SendMailFromWcfService</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSendMailFromWcfServiceUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSendMailFromWcfServiceUsage(SPWeb web, string to, string subject, string body)\r\n        {\r\n            // save current context\r\n            HttpContext curCtx = HttpContext.Current;\r\n            HttpContext.Current = null; // &lt;-- recommended approach for wcf services\r\n\r\n            bool success = SPUtility.SendEmail(web, true, true, to, subject, body);\r\n\r\n            // restore the context\r\n            HttpContext.Current = curCtx;\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// save current context\r\n            HttpContext curCtx = HttpContext.Current;\r\n            HttpContext.Current = null; // &lt;-- recommended approach for wcf services\r\n\r\n            bool success = SPUtility.SendEmail(web, true, true, to, subject, body);\r\n\r\n            // restore the context\r\n            HttpContext.Current = curCtx;</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SendMailFromWcfService</ClassName>\r\n  <MethodName>CorrectSendMailFromWcfServiceUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SendMailFromWcfService.CorrectSendMailFromWcfServiceUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SendMailFromWcfService</ClassFullName>\r\n  <MethodParametersCount>4</MethodParametersCount>\r\n  <SourceFileName>SendMailFromWcfService.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SendMailFromWcfService</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SendMailFromWcfService.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample CorrectSendMailFromWcfServiceUsage = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SendMailFromWcfService</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSendMailFromWcfServiceUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSendMailFromWcfServiceUsage(SPWeb web, string to, string subject, string body)\r\n        {\r\n            // save current context\r\n            HttpContext curCtx = HttpContext.Current;\r\n            HttpContext.Current = null; // &lt;-- recommended approach for wcf services\r\n\r\n            bool success = SPUtility.SendEmail(web, true, true, to, subject, body);\r\n\r\n            // restore the context\r\n            HttpContext.Current = curCtx;\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// save current context\r\n            HttpContext curCtx = HttpContext.Current;\r\n            HttpContext.Current = null; // &lt;-- recommended approach for wcf services\r\n\r\n            bool success = SPUtility.SendEmail(web, true, true, to, subject, body);\r\n\r\n            // restore the context\r\n            HttpContext.Current = curCtx;</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SendMailFromWcfService</ClassName>\r\n  <MethodName>CorrectSendMailFromWcfServiceUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SendMailFromWcfService.CorrectSendMailFromWcfServiceUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SendMailFromWcfService</ClassFullName>\r\n  <MethodParametersCount>4</MethodParametersCount>\r\n  <SourceFileName>SendMailFromWcfService.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SendMailFromWcfService</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SendMailFromWcfService.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class SPDataSourceScopeDoesNotDefined
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SPDataSourceScopeDoesNotDefined</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>SPDataSourceScopeUsageSamples</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void SPDataSourceScopeUsageSamples(SPList list)\r\n        {\r\n            var ds = new SPDataSource();\r\n\r\n            ds.List = list;\r\n            ds.DataSourceMode = SPDataSourceMode.List;\r\n            ds.IncludeHidden = false;\r\n\r\n            ds.Scope = SPViewScope.Recursive; // &lt;-  recommended\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var ds = new SPDataSource();\r\n\r\n            ds.List = list;\r\n            ds.DataSourceMode = SPDataSourceMode.List;\r\n            ds.IncludeHidden = false;\r\n\r\n            ds.Scope = SPViewScope.Recursive; // &lt;-  recommended</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SPDataSourceScopeDoesNotDefined</ClassName>\r\n  <MethodName>SPDataSourceScopeUsageSamples</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPDataSourceScopeDoesNotDefined.SPDataSourceScopeUsageSamples</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPDataSourceScopeDoesNotDefined</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SPDataSourceScopeDoesNotDefined.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SPDataSourceScopeDoesNotDefined</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SPDataSourceScopeDoesNotDefined.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample SPDataSourceScopeUsageSamples = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SPDataSourceScopeDoesNotDefined</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>SPDataSourceScopeUsageSamples</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void SPDataSourceScopeUsageSamples(SPList list)\r\n        {\r\n            var ds = new SPDataSource();\r\n\r\n            ds.List = list;\r\n            ds.DataSourceMode = SPDataSourceMode.List;\r\n            ds.IncludeHidden = false;\r\n\r\n            ds.Scope = SPViewScope.Recursive; // &lt;-  recommended\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var ds = new SPDataSource();\r\n\r\n            ds.List = list;\r\n            ds.DataSourceMode = SPDataSourceMode.List;\r\n            ds.IncludeHidden = false;\r\n\r\n            ds.Scope = SPViewScope.Recursive; // &lt;-  recommended</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SPDataSourceScopeDoesNotDefined</ClassName>\r\n  <MethodName>SPDataSourceScopeUsageSamples</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPDataSourceScopeDoesNotDefined.SPDataSourceScopeUsageSamples</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPDataSourceScopeDoesNotDefined</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SPDataSourceScopeDoesNotDefined.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SPDataSourceScopeDoesNotDefined</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SPDataSourceScopeDoesNotDefined.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class SpecifySPZoneInSPSite
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SpecifySPZoneInSPSite</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>IncorrectSPUrlZoneParamUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void IncorrectSPUrlZoneParamUsage(SPList list)\r\n        {\r\n            using (SPSite site = new SPSite(SPContext.Current.Site.ID))\r\n            {\r\n                SPUrlZone zone = site.Zone;\r\n                //Logic that depends on Zone\r\n                //Oops! Zone is always \'Default\'\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>using (SPSite site = new SPSite(SPContext.Current.Site.ID))\r\n            {\r\n                SPUrlZone zone = site.Zone;\r\n                //Logic that depends on Zone\r\n                //Oops! Zone is always \'Default\'\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SpecifySPZoneInSPSite</ClassName>\r\n  <MethodName>IncorrectSPUrlZoneParamUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SpecifySPZoneInSPSite.IncorrectSPUrlZoneParamUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SpecifySPZoneInSPSite</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SpecifySPZoneInSPSite.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SpecifySPZoneInSPSite</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SpecifySPZoneInSPSite.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SpecifySPZoneInSPSite</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPUrlZoneParamUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPUrlZoneParamUsage(SPList list)\r\n        {\r\n            using (SPSite site = new SPSite(SPContext.Current.Site.ID, SPContext.Current.Site.Zone))\r\n            {\r\n                SPUrlZone zone = site.Zone;\r\n                //Logic that depends on Zone\r\n                //Zone will contain the correct Zone depending upon the Context\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>using (SPSite site = new SPSite(SPContext.Current.Site.ID, SPContext.Current.Site.Zone))\r\n            {\r\n                SPUrlZone zone = site.Zone;\r\n                //Logic that depends on Zone\r\n                //Zone will contain the correct Zone depending upon the Context\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SpecifySPZoneInSPSite</ClassName>\r\n  <MethodName>CorrectSPUrlZoneParamUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SpecifySPZoneInSPSite.CorrectSPUrlZoneParamUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SpecifySPZoneInSPSite</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SpecifySPZoneInSPSite.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SpecifySPZoneInSPSite</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SpecifySPZoneInSPSite.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample IncorrectSPUrlZoneParamUsage = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SpecifySPZoneInSPSite</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>IncorrectSPUrlZoneParamUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void IncorrectSPUrlZoneParamUsage(SPList list)\r\n        {\r\n            using (SPSite site = new SPSite(SPContext.Current.Site.ID))\r\n            {\r\n                SPUrlZone zone = site.Zone;\r\n                //Logic that depends on Zone\r\n                //Oops! Zone is always \'Default\'\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>using (SPSite site = new SPSite(SPContext.Current.Site.ID))\r\n            {\r\n                SPUrlZone zone = site.Zone;\r\n                //Logic that depends on Zone\r\n                //Oops! Zone is always \'Default\'\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SpecifySPZoneInSPSite</ClassName>\r\n  <MethodName>IncorrectSPUrlZoneParamUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SpecifySPZoneInSPSite.IncorrectSPUrlZoneParamUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SpecifySPZoneInSPSite</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SpecifySPZoneInSPSite.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SpecifySPZoneInSPSite</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SpecifySPZoneInSPSite.cs</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample CorrectSPUrlZoneParamUsage = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SpecifySPZoneInSPSite</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPUrlZoneParamUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPUrlZoneParamUsage(SPList list)\r\n        {\r\n            using (SPSite site = new SPSite(SPContext.Current.Site.ID, SPContext.Current.Site.Zone))\r\n            {\r\n                SPUrlZone zone = site.Zone;\r\n                //Logic that depends on Zone\r\n                //Zone will contain the correct Zone depending upon the Context\r\n            }\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>using (SPSite site = new SPSite(SPContext.Current.Site.ID, SPContext.Current.Site.Zone))\r\n            {\r\n                SPUrlZone zone = site.Zone;\r\n                //Logic that depends on Zone\r\n                //Zone will contain the correct Zone depending upon the Context\r\n            }</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SpecifySPZoneInSPSite</ClassName>\r\n  <MethodName>CorrectSPUrlZoneParamUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SpecifySPZoneInSPSite.CorrectSPUrlZoneParamUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SpecifySPZoneInSPSite</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SpecifySPZoneInSPSite.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SpecifySPZoneInSPSite</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SpecifySPZoneInSPSite.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class SPQueryScopeDoesNotDefined
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SPQueryScopeDoesNotDefined</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>SPQueryScopeUsageSamples</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void SPQueryScopeUsageSamples(SPList list)\r\n        {\r\n            Console.WriteLine(\"All Items Count: \" + list.ItemCount);\r\n\r\n            var firstQuery = new SPQuery();\r\n            var firstResult = list.GetItems(firstQuery);\r\n\r\n            Console.WriteLine(\"First Query: \" + firstResult.Count);\r\n\r\n            var secondQuery = new SPQuery\r\n            {\r\n                ViewAttributes = \"Scope=\\\"RecursiveAll\\\"\"\r\n            };\r\n            var secondResult = list.GetItems(secondQuery);\r\n\r\n            Console.WriteLine(\"Second Query: \" + secondResult.Count);\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>Console.WriteLine(\"All Items Count: \" + list.ItemCount);\r\n\r\n            var firstQuery = new SPQuery();\r\n            var firstResult = list.GetItems(firstQuery);\r\n\r\n            Console.WriteLine(\"First Query: \" + firstResult.Count);\r\n\r\n            var secondQuery = new SPQuery\r\n            {\r\n                ViewAttributes = \"Scope=\\\"RecursiveAll\\\"\"\r\n            };\r\n            var secondResult = list.GetItems(secondQuery);\r\n\r\n            Console.WriteLine(\"Second Query: \" + secondResult.Count);</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SPQueryScopeDoesNotDefined</ClassName>\r\n  <MethodName>SPQueryScopeUsageSamples</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPQueryScopeDoesNotDefined.SPQueryScopeUsageSamples</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPQueryScopeDoesNotDefined</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SPQueryScopeDoesNotDefined.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SPQueryScopeDoesNotDefined</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SPQueryScopeDoesNotDefined.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample SPQueryScopeUsageSamples = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SPQueryScopeDoesNotDefined</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>SPQueryScopeUsageSamples</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void SPQueryScopeUsageSamples(SPList list)\r\n        {\r\n            Console.WriteLine(\"All Items Count: \" + list.ItemCount);\r\n\r\n            var firstQuery = new SPQuery();\r\n            var firstResult = list.GetItems(firstQuery);\r\n\r\n            Console.WriteLine(\"First Query: \" + firstResult.Count);\r\n\r\n            var secondQuery = new SPQuery\r\n            {\r\n                ViewAttributes = \"Scope=\\\"RecursiveAll\\\"\"\r\n            };\r\n            var secondResult = list.GetItems(secondQuery);\r\n\r\n            Console.WriteLine(\"Second Query: \" + secondResult.Count);\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>Console.WriteLine(\"All Items Count: \" + list.ItemCount);\r\n\r\n            var firstQuery = new SPQuery();\r\n            var firstResult = list.GetItems(firstQuery);\r\n\r\n            Console.WriteLine(\"First Query: \" + firstResult.Count);\r\n\r\n            var secondQuery = new SPQuery\r\n            {\r\n                ViewAttributes = \"Scope=\\\"RecursiveAll\\\"\"\r\n            };\r\n            var secondResult = list.GetItems(secondQuery);\r\n\r\n            Console.WriteLine(\"Second Query: \" + secondResult.Count);</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SPQueryScopeDoesNotDefined</ClassName>\r\n  <MethodName>SPQueryScopeUsageSamples</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPQueryScopeDoesNotDefined.SPQueryScopeUsageSamples</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPQueryScopeDoesNotDefined</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SPQueryScopeDoesNotDefined.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SPQueryScopeDoesNotDefined</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SPQueryScopeDoesNotDefined.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class SPViewScopeDoesNotDefined
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SPViewScopeDoesNotDefined</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPViewScopeUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPViewScopeUsage(SPList list)\r\n        {\r\n            var viewFields = new[] { \"Title\", \"Department\" };\r\n\r\n            var fields = new StringCollection();\r\n            fields.AddRange(viewFields);\r\n\r\n            var newView = list.Views.Add(\"TestView\", fields, string.Empty, 100, true, false);\r\n\r\n            // define SPView.Scope\r\n            newView.Scope = SPViewScope.Recursive;\r\n            newView.Update();\r\n\r\n            list.Update();\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var viewFields = new[] { \"Title\", \"Department\" };\r\n\r\n            var fields = new StringCollection();\r\n            fields.AddRange(viewFields);\r\n\r\n            var newView = list.Views.Add(\"TestView\", fields, string.Empty, 100, true, false);\r\n\r\n            // define SPView.Scope\r\n            newView.Scope = SPViewScope.Recursive;\r\n            newView.Update();\r\n\r\n            list.Update();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SPViewScopeDoesNotDefined</ClassName>\r\n  <MethodName>CorrectSPViewScopeUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPViewScopeDoesNotDefined.CorrectSPViewScopeUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPViewScopeDoesNotDefined</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SPViewScopeDoesNotDefined.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SPViewScopeDoesNotDefined</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SPViewScopeDoesNotDefined.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample CorrectSPViewScopeUsage = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>SPViewScopeDoesNotDefined</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPViewScopeUsage</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPViewScopeUsage(SPList list)\r\n        {\r\n            var viewFields = new[] { \"Title\", \"Department\" };\r\n\r\n            var fields = new StringCollection();\r\n            fields.AddRange(viewFields);\r\n\r\n            var newView = list.Views.Add(\"TestView\", fields, string.Empty, 100, true, false);\r\n\r\n            // define SPView.Scope\r\n            newView.Scope = SPViewScope.Recursive;\r\n            newView.Update();\r\n\r\n            list.Update();\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>var viewFields = new[] { \"Title\", \"Department\" };\r\n\r\n            var fields = new StringCollection();\r\n            fields.AddRange(viewFields);\r\n\r\n            var newView = list.Views.Add(\"TestView\", fields, string.Empty, 100, true, false);\r\n\r\n            // define SPView.Scope\r\n            newView.Scope = SPViewScope.Recursive;\r\n            newView.Update();\r\n\r\n            list.Update();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>SPViewScopeDoesNotDefined</ClassName>\r\n  <MethodName>CorrectSPViewScopeUsage</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPViewScopeDoesNotDefined.CorrectSPViewScopeUsage</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.SPViewScopeDoesNotDefined</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>SPViewScopeDoesNotDefined.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SPViewScopeDoesNotDefined</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\SPViewScopeDoesNotDefined.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class UnsafeCastingInItemReceiver
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>UnsafeCastingInItemReceiver</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>UnsafeCastOnSPItemEventDataCollectionItem</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void UnsafeCastOnSPItemEventDataCollectionItem(SPItemEventProperties properties)\r\n        {\r\n            properties.AfterProperties[\"Contracts\"].ToString();\r\n            properties.BeforeProperties[\"Contracts\"].ToString();\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>properties.AfterProperties[\"Contracts\"].ToString();\r\n            properties.BeforeProperties[\"Contracts\"].ToString();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>UnsafeCastingInItemReceiver</ClassName>\r\n  <MethodName>UnsafeCastOnSPItemEventDataCollectionItem</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.UnsafeCastingInItemReceiver.UnsafeCastOnSPItemEventDataCollectionItem</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.UnsafeCastingInItemReceiver</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>UnsafeCastingInItemReceiver.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>UnsafeCastingInItemReceiver</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\UnsafeCastingInItemReceiver.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample UnsafeCastOnSPItemEventDataCollectionItem = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>UnsafeCastingInItemReceiver</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>UnsafeCastOnSPItemEventDataCollectionItem</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void UnsafeCastOnSPItemEventDataCollectionItem(SPItemEventProperties properties)\r\n        {\r\n            properties.AfterProperties[\"Contracts\"].ToString();\r\n            properties.BeforeProperties[\"Contracts\"].ToString();\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>properties.AfterProperties[\"Contracts\"].ToString();\r\n            properties.BeforeProperties[\"Contracts\"].ToString();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>UnsafeCastingInItemReceiver</ClassName>\r\n  <MethodName>UnsafeCastOnSPItemEventDataCollectionItem</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.UnsafeCastingInItemReceiver.UnsafeCastOnSPItemEventDataCollectionItem</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.UnsafeCastingInItemReceiver</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>UnsafeCastingInItemReceiver.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>UnsafeCastingInItemReceiver</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\UnsafeCastingInItemReceiver.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class WrongSPViewUpdate
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>WrongSPViewUpdate</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>IncorrectSPViewUpdate</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void IncorrectSPViewUpdate(SPList list)\r\n        {\r\n            // won\'t save view (!!!)\r\n            list.Views[\"TestView1\"].DefaultView = true;\r\n            list.Views[\"TestView1\"].Update();\r\n\r\n            // saves the \"NewField2\" only (!!!)\r\n            list.DefaultView.ViewFields.Add(\"NewField1\");\r\n            list.DefaultView.ViewFields.Add(\"NewField2\");\r\n            list.DefaultView.Update();\r\n\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// won\'t save view (!!!)\r\n            list.Views[\"TestView1\"].DefaultView = true;\r\n            list.Views[\"TestView1\"].Update();\r\n\r\n            // saves the \"NewField2\" only (!!!)\r\n            list.DefaultView.ViewFields.Add(\"NewField1\");\r\n            list.DefaultView.ViewFields.Add(\"NewField2\");\r\n            list.DefaultView.Update();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>WrongSPViewUpdate</ClassName>\r\n  <MethodName>IncorrectSPViewUpdate</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.WrongSPViewUpdate.IncorrectSPViewUpdate</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.WrongSPViewUpdate</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>WrongSPViewUpdate.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>WrongSPViewUpdate</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\WrongSPViewUpdate.cs</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>WrongSPViewUpdate</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPViewUpdate</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPViewUpdate(SPList list)\r\n        {\r\n            // save SPView instance into a local varible, always!\r\n            var view = list.Views[\"TestView1\"];\r\n\r\n            view.DefaultView = true;\r\n            view.Paged = true;\r\n\r\n            view.Update();\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// save SPView instance into a local varible, always!\r\n            var view = list.Views[\"TestView1\"];\r\n\r\n            view.DefaultView = true;\r\n            view.Paged = true;\r\n\r\n            view.Update();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>WrongSPViewUpdate</ClassName>\r\n  <MethodName>CorrectSPViewUpdate</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.WrongSPViewUpdate.CorrectSPViewUpdate</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.WrongSPViewUpdate</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>WrongSPViewUpdate.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>WrongSPViewUpdate</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\WrongSPViewUpdate.cs</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample IncorrectSPViewUpdate = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>WrongSPViewUpdate</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>IncorrectSPViewUpdate</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void IncorrectSPViewUpdate(SPList list)\r\n        {\r\n            // won\'t save view (!!!)\r\n            list.Views[\"TestView1\"].DefaultView = true;\r\n            list.Views[\"TestView1\"].Update();\r\n\r\n            // saves the \"NewField2\" only (!!!)\r\n            list.DefaultView.ViewFields.Add(\"NewField1\");\r\n            list.DefaultView.ViewFields.Add(\"NewField2\");\r\n            list.DefaultView.Update();\r\n\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// won\'t save view (!!!)\r\n            list.Views[\"TestView1\"].DefaultView = true;\r\n            list.Views[\"TestView1\"].Update();\r\n\r\n            // saves the \"NewField2\" only (!!!)\r\n            list.DefaultView.ViewFields.Add(\"NewField1\");\r\n            list.DefaultView.ViewFields.Add(\"NewField2\");\r\n            list.DefaultView.Update();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>WrongSPViewUpdate</ClassName>\r\n  <MethodName>IncorrectSPViewUpdate</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.WrongSPViewUpdate.IncorrectSPViewUpdate</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.WrongSPViewUpdate</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>WrongSPViewUpdate.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>WrongSPViewUpdate</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\WrongSPViewUpdate.cs</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample CorrectSPViewUpdate = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags>\r\n    <DocSampleTag>\r\n      <Name>SampleDefinitionGroup</Name>\r\n      <Values>\r\n        <string>WrongSPViewUpdate</string>\r\n      </Values>\r\n    </DocSampleTag>\r\n  </Tags>\r\n  <Title>CorrectSPViewUpdate</Title>\r\n  <Description />\r\n  <MethodBodyWithFunction>\r\n        public void CorrectSPViewUpdate(SPList list)\r\n        {\r\n            // save SPView instance into a local varible, always!\r\n            var view = list.Views[\"TestView1\"];\r\n\r\n            view.DefaultView = true;\r\n            view.Paged = true;\r\n\r\n            view.Update();\r\n        }</MethodBodyWithFunction>\r\n  <MethodBody>// save SPView instance into a local varible, always!\r\n            var view = list.Views[\"TestView1\"];\r\n\r\n            view.DefaultView = true;\r\n            view.Paged = true;\r\n\r\n            view.Update();</MethodBody>\r\n  <Language>cs</Language>\r\n  <Namespace>ReSharePoint.Docs.Basic.Inspection.Code</Namespace>\r\n  <ClassName>WrongSPViewUpdate</ClassName>\r\n  <MethodName>CorrectSPViewUpdate</MethodName>\r\n  <ClassComment />\r\n  <MethodFullName>ReSharePoint.Docs.Basic.Inspection.Code.WrongSPViewUpdate.CorrectSPViewUpdate</MethodFullName>\r\n  <ClassFullName>ReSharePoint.Docs.Basic.Inspection.Code.WrongSPViewUpdate</ClassFullName>\r\n  <MethodParametersCount>1</MethodParametersCount>\r\n  <SourceFileName>WrongSPViewUpdate.cs</SourceFileName>\r\n  <SourceFileNameWithoutExtension>WrongSPViewUpdate</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\WrongSPViewUpdate.cs</SourceFilePath>\r\n</DocSample>");
        }

        public static class AvoidJQueryDocumentReadyInCode
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>window.myappName$ = window.myappName$ || jQuery.noConflict(true);\r\n\r\n    (function($) {\r\n        if (!_spBodyOnLoadCalled) {\r\n            _spBodyOnLoadFunctions.push(pageLoad);\r\n        } else {\r\n            pageLoad();\r\n        }\r\n\r\n        function pageLoad() {\r\n            $(\'#pageTitle span\').text(\'Hello from jQuery\');\r\n        }\r\n\r\n        RegisterModuleInit(_spPageContextInfo.webServerRelativeUrl + \'/appname/script.js\', pageLoad);\r\n\r\n    })(window.myappName$);</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReadyInCode</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInCode_Init</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReadyInCode.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReadyInCode</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidJQueryDocumentReadyInCode.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>m$.ready(function () {\r\n        // DO STUFF\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReadyInCode</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInCode_mQuery</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReadyInCode.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReadyInCode</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidJQueryDocumentReadyInCode.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReadyInCode</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInCode_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReadyInCode.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReadyInCode</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidJQueryDocumentReadyInCode.html</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample AvoidJQueryDocumentReadyInCode_Init = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>window.myappName$ = window.myappName$ || jQuery.noConflict(true);\r\n\r\n    (function($) {\r\n        if (!_spBodyOnLoadCalled) {\r\n            _spBodyOnLoadFunctions.push(pageLoad);\r\n        } else {\r\n            pageLoad();\r\n        }\r\n\r\n        function pageLoad() {\r\n            $(\'#pageTitle span\').text(\'Hello from jQuery\');\r\n        }\r\n\r\n        RegisterModuleInit(_spPageContextInfo.webServerRelativeUrl + \'/appname/script.js\', pageLoad);\r\n\r\n    })(window.myappName$);</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReadyInCode</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInCode_Init</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReadyInCode.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReadyInCode</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidJQueryDocumentReadyInCode.html</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample AvoidJQueryDocumentReadyInCode_mQuery = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>m$.ready(function () {\r\n        // DO STUFF\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReadyInCode</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInCode_mQuery</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReadyInCode.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReadyInCode</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidJQueryDocumentReadyInCode.html</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample AvoidJQueryDocumentReadyInCode_mQuerySODExecute = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReadyInCode</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInCode_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReadyInCode.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReadyInCode</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\csharp</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\csharp\\AvoidJQueryDocumentReadyInCode.html</SourceFilePath>\r\n</DocSample>");
        }

        public static class AvoidJQueryDocumentReady
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>window.myappName$ = window.myappName$ || jQuery.noConflict(true);\r\n\r\n    (function ($) {\r\n        if (!_spBodyOnLoadCalled) {\r\n            _spBodyOnLoadFunctions.push(pageLoad);\r\n        } else {\r\n            pageLoad();\r\n        }\r\n\r\n        function pageLoad() {\r\n            $(\'#pageTitle span\').text(\'Hello from jQuery\');\r\n        }\r\n\r\n        RegisterModuleInit(_spPageContextInfo.webServerRelativeUrl + \'appname/script.js\', pageLoad);\r\n\r\n    })(window.myappName$);</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInControl_Init</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>m$.ready(function () {\r\n        // DO STUFF\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInControl_mQuery</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInControl_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInJSFile_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInMasterPage_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInPage_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample AvoidJQueryDocumentReadyInControl_Init = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>window.myappName$ = window.myappName$ || jQuery.noConflict(true);\r\n\r\n    (function ($) {\r\n        if (!_spBodyOnLoadCalled) {\r\n            _spBodyOnLoadFunctions.push(pageLoad);\r\n        } else {\r\n            pageLoad();\r\n        }\r\n\r\n        function pageLoad() {\r\n            $(\'#pageTitle span\').text(\'Hello from jQuery\');\r\n        }\r\n\r\n        RegisterModuleInit(_spPageContextInfo.webServerRelativeUrl + \'appname/script.js\', pageLoad);\r\n\r\n    })(window.myappName$);</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInControl_Init</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample AvoidJQueryDocumentReadyInControl_mQuery = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>m$.ready(function () {\r\n        // DO STUFF\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInControl_mQuery</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample AvoidJQueryDocumentReadyInControl_mQuerySODExecute = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInControl_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample AvoidJQueryDocumentReadyInJSFile_mQuerySODExecute = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInJSFile_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample AvoidJQueryDocumentReadyInMasterPage_mQuerySODExecute = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInMasterPage_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample AvoidJQueryDocumentReadyInPage_mQuerySODExecute = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>SP.SOD.execute(\"mquery.js\", \"m$.ready\", function () {\r\n\r\n        // DO STUFF\r\n\r\n    });</MethodBody>\r\n  <Language>js</Language>\r\n  <ClassName>AvoidJQueryDocumentReady</ClassName>\r\n  <MethodName>AvoidJQueryDocumentReadyInPage_mQuerySODExecute</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidJQueryDocumentReady.html</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidJQueryDocumentReady</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\javascript</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\javascript\\AvoidJQueryDocumentReady.html</SourceFilePath>\r\n</DocSample>");
        }

        public static class SPDataSourceScopeDoesNotDefinedInPage
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;sharepoint:spdatasource runat=\"server\" id=\"dsPeople\" datasourcemode=\"ListItem\" useinternalname=\"true\"&gt;\r\n      &lt;selectparameters&gt;\r\n        &lt;asp:parameter name=\"WebUrl\" defaultvalue=\"/configuration/\"&gt;&lt;/asp:parameter&gt;\r\n        &lt;asp:parameter name=\"ListID\" defaultvalue=\"34F91B0C-FCF2-455A-ABBA-67724FB4024A\"&gt;&lt;/asp:parameter&gt;\r\n        &lt;asp:parameter name=\"ListItemID\" defaultvalue=\"1\"&gt;&lt;/asp:parameter&gt;\r\n      &lt;/selectparameters&gt;\r\n    &lt;/sharepoint:spdatasource&gt;\r\n\r\n    &lt;asp:gridview id=\"grdPeople\" runat=\"server\" datasourceid=\"dsPeople\" autogeneratecolumns=\"False\"&gt;\r\n      &lt;columns&gt;\r\n        &lt;asp:boundfield datafield=\"FullName\" headertext=\"Blogger name\"&gt;&lt;/asp:boundfield&gt;\r\n        &lt;asp:boundfield datafield=\"WorkCity\" headertext=\"City\"&gt;&lt;/asp:boundfield&gt;\r\n        &lt;asp:boundfield datafield=\"Blog_x0020_URL\" headertext=\"Blog URL\"&gt;&lt;/asp:boundfield&gt;\r\n      &lt;/columns&gt;\r\n    &lt;/asp:gridview&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>SPDataSourceScopeDoesNotDefinedInPage</ClassName>\r\n  <MethodName>CorrectSPDataSourceScope</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>SPDataSourceScopeDoesNotDefinedInPage.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SPDataSourceScopeDoesNotDefinedInPage</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\aspnet</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\aspnet\\SPDataSourceScopeDoesNotDefinedInPage.xml</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample CorrectSPDataSourceScope = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;sharepoint:spdatasource runat=\"server\" id=\"dsPeople\" datasourcemode=\"ListItem\" useinternalname=\"true\"&gt;\r\n      &lt;selectparameters&gt;\r\n        &lt;asp:parameter name=\"WebUrl\" defaultvalue=\"/configuration/\"&gt;&lt;/asp:parameter&gt;\r\n        &lt;asp:parameter name=\"ListID\" defaultvalue=\"34F91B0C-FCF2-455A-ABBA-67724FB4024A\"&gt;&lt;/asp:parameter&gt;\r\n        &lt;asp:parameter name=\"ListItemID\" defaultvalue=\"1\"&gt;&lt;/asp:parameter&gt;\r\n      &lt;/selectparameters&gt;\r\n    &lt;/sharepoint:spdatasource&gt;\r\n\r\n    &lt;asp:gridview id=\"grdPeople\" runat=\"server\" datasourceid=\"dsPeople\" autogeneratecolumns=\"False\"&gt;\r\n      &lt;columns&gt;\r\n        &lt;asp:boundfield datafield=\"FullName\" headertext=\"Blogger name\"&gt;&lt;/asp:boundfield&gt;\r\n        &lt;asp:boundfield datafield=\"WorkCity\" headertext=\"City\"&gt;&lt;/asp:boundfield&gt;\r\n        &lt;asp:boundfield datafield=\"Blog_x0020_URL\" headertext=\"Blog URL\"&gt;&lt;/asp:boundfield&gt;\r\n      &lt;/columns&gt;\r\n    &lt;/asp:gridview&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>SPDataSourceScopeDoesNotDefinedInPage</ClassName>\r\n  <MethodName>CorrectSPDataSourceScope</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>SPDataSourceScopeDoesNotDefinedInPage.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>SPDataSourceScopeDoesNotDefinedInPage</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\aspnet</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\aspnet\\SPDataSourceScopeDoesNotDefinedInPage.xml</SourceFilePath>\r\n</DocSample>");
        }

        public static class AvoidCommentsForContentType
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;contenttype id=\"0x010100...\" name=\"MyContentType\" group=\"Project 1\" description=\"Groovy\" inherits=\"TRUE\" version=\"0\"&gt;\r\n      &lt;fieldrefs&gt;\r\n        &lt;fieldref id=\"{99F38C7E-0493-4beb-B1AE-2E2396B78BA2}\" name=\"NiceNewField\"&gt;&lt;/fieldref&gt;\r\n        &lt;!-- Needed to make the XXZ Widget work and this comment will break the content type! --&gt;\r\n        &lt;fieldref id=\"{F55C4D88-1F2E-4ad9-AAA8-819AF4EE7EE8}\" name=\"PublishingPageContent\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{D6E31868-E402-4c28-BCDD-F8C517A7897B}\" name=\"CommentingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{1B14D023-939E-497e-9621-21CA3FDE7DDD}\" name=\"RatingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{EBDF37A6-5DA2-48a2-9493-FCFEDD40598E}\" name=\"TaggingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{D33453AC-5B1B-4A04-9673-CFBA8368195D}\" name=\"Keywords\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{A45C395D-BBBF-47D8-9A46-3A3E070EB535}\" name=\"KeywordsTaxHTField0\" hidden=\"TRUE\"&gt;&lt;/fieldref&gt;\r\n      &lt;/fieldrefs&gt;\r\n    &lt;/contenttype&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>AvoidCommentsForContentType</ClassName>\r\n  <MethodName>IncorrectContentTypeWithComments</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidCommentsForContentType.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidCommentsForContentType</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\AvoidCommentsForContentType.xml</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;contenttype id=\"0x010100...\" name=\"MyContentType\" group=\"Project 1\" description=\"Groovy\" inherits=\"TRUE\" version=\"0\"&gt;\r\n      &lt;fieldrefs&gt;\r\n        &lt;fieldref id=\"{99F38C7E-0493-4beb-B1AE-2E2396B78BA2}\" name=\"NiceNewField\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{F55C4D88-1F2E-4ad9-AAA8-819AF4EE7EE8}\" name=\"PublishingPageContent\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{D6E31868-E402-4c28-BCDD-F8C517A7897B}\" name=\"CommentingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{1B14D023-939E-497e-9621-21CA3FDE7DDD}\" name=\"RatingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{EBDF37A6-5DA2-48a2-9493-FCFEDD40598E}\" name=\"TaggingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{D33453AC-5B1B-4A04-9673-CFBA8368195D}\" name=\"Keywords\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{A45C395D-BBBF-47D8-9A46-3A3E070EB535}\" name=\"KeywordsTaxHTField0\" hidden=\"TRUE\"&gt;&lt;/fieldref&gt;\r\n      &lt;/fieldrefs&gt;\r\n    &lt;/contenttype&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>AvoidCommentsForContentType</ClassName>\r\n  <MethodName>CorrectContentTypeWithComments</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidCommentsForContentType.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidCommentsForContentType</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\AvoidCommentsForContentType.xml</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample IncorrectContentTypeWithComments = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;contenttype id=\"0x010100...\" name=\"MyContentType\" group=\"Project 1\" description=\"Groovy\" inherits=\"TRUE\" version=\"0\"&gt;\r\n      &lt;fieldrefs&gt;\r\n        &lt;fieldref id=\"{99F38C7E-0493-4beb-B1AE-2E2396B78BA2}\" name=\"NiceNewField\"&gt;&lt;/fieldref&gt;\r\n        &lt;!-- Needed to make the XXZ Widget work and this comment will break the content type! --&gt;\r\n        &lt;fieldref id=\"{F55C4D88-1F2E-4ad9-AAA8-819AF4EE7EE8}\" name=\"PublishingPageContent\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{D6E31868-E402-4c28-BCDD-F8C517A7897B}\" name=\"CommentingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{1B14D023-939E-497e-9621-21CA3FDE7DDD}\" name=\"RatingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{EBDF37A6-5DA2-48a2-9493-FCFEDD40598E}\" name=\"TaggingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{D33453AC-5B1B-4A04-9673-CFBA8368195D}\" name=\"Keywords\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{A45C395D-BBBF-47D8-9A46-3A3E070EB535}\" name=\"KeywordsTaxHTField0\" hidden=\"TRUE\"&gt;&lt;/fieldref&gt;\r\n      &lt;/fieldrefs&gt;\r\n    &lt;/contenttype&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>AvoidCommentsForContentType</ClassName>\r\n  <MethodName>IncorrectContentTypeWithComments</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidCommentsForContentType.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidCommentsForContentType</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\AvoidCommentsForContentType.xml</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample CorrectContentTypeWithComments = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;contenttype id=\"0x010100...\" name=\"MyContentType\" group=\"Project 1\" description=\"Groovy\" inherits=\"TRUE\" version=\"0\"&gt;\r\n      &lt;fieldrefs&gt;\r\n        &lt;fieldref id=\"{99F38C7E-0493-4beb-B1AE-2E2396B78BA2}\" name=\"NiceNewField\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{F55C4D88-1F2E-4ad9-AAA8-819AF4EE7EE8}\" name=\"PublishingPageContent\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{D6E31868-E402-4c28-BCDD-F8C517A7897B}\" name=\"CommentingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{1B14D023-939E-497e-9621-21CA3FDE7DDD}\" name=\"RatingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{EBDF37A6-5DA2-48a2-9493-FCFEDD40598E}\" name=\"TaggingEnabled\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{D33453AC-5B1B-4A04-9673-CFBA8368195D}\" name=\"Keywords\"&gt;&lt;/fieldref&gt;\r\n        &lt;fieldref id=\"{A45C395D-BBBF-47D8-9A46-3A3E070EB535}\" name=\"KeywordsTaxHTField0\" hidden=\"TRUE\"&gt;&lt;/fieldref&gt;\r\n      &lt;/fieldrefs&gt;\r\n    &lt;/contenttype&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>AvoidCommentsForContentType</ClassName>\r\n  <MethodName>CorrectContentTypeWithComments</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidCommentsForContentType.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidCommentsForContentType</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\AvoidCommentsForContentType.xml</SourceFilePath>\r\n</DocSample>");
        }

        public static class AvoidListContentTypes
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;metadata&gt;\r\n      &lt;contenttypes&gt;\r\n        &lt;contenttyperef id=\"0x0100EDFEDEA571A241FD80430F4D48A91346\"&gt;&lt;/contenttyperef&gt;\r\n        &lt;contenttyperef id=\"0x0120\"&gt;&lt;/contenttyperef&gt;\r\n      &lt;/contenttypes&gt;\r\n      &lt;fields&gt;&lt;/fields&gt;\r\n      &lt;views&gt; ... &lt;/views&gt;\r\n      &lt;forms&gt; ... &lt;/forms&gt;\r\n    &lt;/metadata&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>AvoidListContentTypes</ClassName>\r\n  <MethodName>CorrectContentTypesInList</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidListContentTypes.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidListContentTypes</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\AvoidListContentTypes.xml</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample CorrectContentTypesInList = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;metadata&gt;\r\n      &lt;contenttypes&gt;\r\n        &lt;contenttyperef id=\"0x0100EDFEDEA571A241FD80430F4D48A91346\"&gt;&lt;/contenttyperef&gt;\r\n        &lt;contenttyperef id=\"0x0120\"&gt;&lt;/contenttyperef&gt;\r\n      &lt;/contenttypes&gt;\r\n      &lt;fields&gt;&lt;/fields&gt;\r\n      &lt;views&gt; ... &lt;/views&gt;\r\n      &lt;forms&gt; ... &lt;/forms&gt;\r\n    &lt;/metadata&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>AvoidListContentTypes</ClassName>\r\n  <MethodName>CorrectContentTypesInList</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>AvoidListContentTypes.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>AvoidListContentTypes</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\AvoidListContentTypes.xml</SourceFilePath>\r\n</DocSample>");
        }

        public static class DeclareEmptyFieldsElement
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;list xmlns:ows=\"Microsoft SharePoint\" title=\"List title\" other=\"\" attributes=\"\"&gt;\r\n      &lt;metadata&gt;\r\n        &lt;contenttypes&gt;\r\n          &lt;contenttyperef id=\"0x0100EDFEDEA571A241FD80430F4D48A91346\"&gt;&lt;/contenttyperef&gt;\r\n          &lt;contenttyperef id=\"0x0120\"&gt;&lt;/contenttyperef&gt;\r\n        &lt;/contenttypes&gt;\r\n        &lt;fields&gt;\r\n        &lt;/fields&gt;\r\n        &lt;views&gt;\r\n        &lt;/views&gt;\r\n        &lt;forms&gt;\r\n        &lt;/forms&gt;\r\n      &lt;/metadata&gt;\r\n    &lt;/list&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>DeclareEmptyFieldsElement</ClassName>\r\n  <MethodName>DeclareEmptyFields</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DeclareEmptyFieldsElement.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DeclareEmptyFieldsElement</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\DeclareEmptyFieldsElement.xml</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample DeclareEmptyFields = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;list xmlns:ows=\"Microsoft SharePoint\" title=\"List title\" other=\"\" attributes=\"\"&gt;\r\n      &lt;metadata&gt;\r\n        &lt;contenttypes&gt;\r\n          &lt;contenttyperef id=\"0x0100EDFEDEA571A241FD80430F4D48A91346\"&gt;&lt;/contenttyperef&gt;\r\n          &lt;contenttyperef id=\"0x0120\"&gt;&lt;/contenttyperef&gt;\r\n        &lt;/contenttypes&gt;\r\n        &lt;fields&gt;\r\n        &lt;/fields&gt;\r\n        &lt;views&gt;\r\n        &lt;/views&gt;\r\n        &lt;forms&gt;\r\n        &lt;/forms&gt;\r\n      &lt;/metadata&gt;\r\n    &lt;/list&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>DeclareEmptyFieldsElement</ClassName>\r\n  <MethodName>DeclareEmptyFields</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DeclareEmptyFieldsElement.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DeclareEmptyFieldsElement</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\DeclareEmptyFieldsElement.xml</SourceFilePath>\r\n</DocSample>");
        }

        public static class DoNotIndexNoteField
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;field group=\"My group\" id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Note\" displayname=\"Content\" description=\"Brief description.\" required=\"TRUE\" indexed=\"TRUE\" numlines=\"6\" name=\"Name1\" staticname=\"Name1\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>DoNotIndexNoteField</ClassName>\r\n  <MethodName>IncorrectNoteFieldXml</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DoNotIndexNoteField.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotIndexNoteField</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\DoNotIndexNoteField.xml</SourceFilePath>\r\n</DocSample>")            ,
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;field group=\"My group\" id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Note\" displayname=\"Content\" description=\"Brief description.\" required=\"TRUE\" numlines=\"6\" name=\"Name1\" staticname=\"Name1\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>DoNotIndexNoteField</ClassName>\r\n  <MethodName>CorrectNoteFieldXml</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DoNotIndexNoteField.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotIndexNoteField</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\DoNotIndexNoteField.xml</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample IncorrectNoteFieldXml = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;field group=\"My group\" id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Note\" displayname=\"Content\" description=\"Brief description.\" required=\"TRUE\" indexed=\"TRUE\" numlines=\"6\" name=\"Name1\" staticname=\"Name1\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>DoNotIndexNoteField</ClassName>\r\n  <MethodName>IncorrectNoteFieldXml</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DoNotIndexNoteField.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotIndexNoteField</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\DoNotIndexNoteField.xml</SourceFilePath>\r\n</DocSample>");
            public static SubPointSolutions.Docs.Code.Data.DocSample CorrectNoteFieldXml = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;field group=\"My group\" id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Note\" displayname=\"Content\" description=\"Brief description.\" required=\"TRUE\" numlines=\"6\" name=\"Name1\" staticname=\"Name1\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>DoNotIndexNoteField</ClassName>\r\n  <MethodName>CorrectNoteFieldXml</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>DoNotIndexNoteField.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>DoNotIndexNoteField</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\DoNotIndexNoteField.xml</SourceFilePath>\r\n</DocSample>");
        }

        public static class MixedIDInFieldName
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;field id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Text\" name=\"customerID\" staticname=\"customerID\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;\r\n\r\n    &lt;field id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Text\" name=\"clientId\" staticname=\"clientId\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;\r\n\r\n    &lt;field id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Text\" name=\"documentID\" staticname=\"documentID\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>MixedIDInFieldName</ClassName>\r\n  <MethodName>IncorrectNoteFieldXml</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>MixedIDInFieldName.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>MixedIDInFieldName</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\MixedIDInFieldName.xml</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample IncorrectNoteFieldXml = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;field id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Text\" name=\"customerID\" staticname=\"customerID\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;\r\n\r\n    &lt;field id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Text\" name=\"clientId\" staticname=\"clientId\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;\r\n\r\n    &lt;field id=\"{FE2C05A9-1861-48C3-8DB4-3C08E9830E2C}\" type=\"Text\" name=\"documentID\" staticname=\"documentID\" overwrite=\"TRUE\"&gt;\r\n    &lt;/field&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>MixedIDInFieldName</ClassName>\r\n  <MethodName>IncorrectNoteFieldXml</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>MixedIDInFieldName.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>MixedIDInFieldName</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\MixedIDInFieldName.xml</SourceFilePath>\r\n</DocSample>");
        }

        public static class WebPartDefinitionMightBeImproved
        {
            public static System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample> SysAllSamples = new System.Collections.Generic.List<SubPointSolutions.Docs.Code.Data.DocSample>(new SubPointSolutions.Docs.Code.Data.DocSample[] { 
SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;properties&gt;\r\n      &lt;property name=\"Title\" type=\"string\"&gt;VisualWebPart1&lt;/property&gt;\r\n      &lt;property name=\"TitleIconImageUrl\" type=\"string\"&gt;/_layouts/images/Adicodes/AdicodesIcon.png&lt;/property&gt;\r\n      &lt;property name=\"CatalogIconImageUrl\" type=\"string\"&gt;/_layouts/images/Adicodes/AdicodesIcon.png&lt;/property&gt;\r\n    &lt;/properties&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>WebPartDefinitionMightBeImproved</ClassName>\r\n  <MethodName>IncorrectNoteFieldXml</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>WebPartDefinitionMightBeImproved.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>WebPartDefinitionMightBeImproved</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\WebPartDefinitionMightBeImproved.xml</SourceFilePath>\r\n</DocSample>")
            });
            public static SubPointSolutions.Docs.Code.Data.DocSample IncorrectNoteFieldXml = SubPointSolutions.Docs.Code.Data.DocSample.FromXml("<?xml version=\"1.0\" encoding=\"utf-16\"?>\r\n<DocSample xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\">\r\n  <Tags />\r\n  <MethodBody>&lt;properties&gt;\r\n      &lt;property name=\"Title\" type=\"string\"&gt;VisualWebPart1&lt;/property&gt;\r\n      &lt;property name=\"TitleIconImageUrl\" type=\"string\"&gt;/_layouts/images/Adicodes/AdicodesIcon.png&lt;/property&gt;\r\n      &lt;property name=\"CatalogIconImageUrl\" type=\"string\"&gt;/_layouts/images/Adicodes/AdicodesIcon.png&lt;/property&gt;\r\n    &lt;/properties&gt;</MethodBody>\r\n  <Language>xml</Language>\r\n  <ClassName>WebPartDefinitionMightBeImproved</ClassName>\r\n  <MethodName>IncorrectNoteFieldXml</MethodName>\r\n  <MethodParametersCount>0</MethodParametersCount>\r\n  <SourceFileName>WebPartDefinitionMightBeImproved.xml</SourceFileName>\r\n  <SourceFileNameWithoutExtension>WebPartDefinitionMightBeImproved</SourceFileNameWithoutExtension>\r\n  <SourceFileFolder>..\\..\\Views\\reSP\\Inspections\\xml</SourceFileFolder>\r\n  <SourceFilePath>..\\..\\Views\\reSP\\Inspections\\xml\\WebPartDefinitionMightBeImproved.xml</SourceFilePath>\r\n</DocSample>");
        }

    }
}
