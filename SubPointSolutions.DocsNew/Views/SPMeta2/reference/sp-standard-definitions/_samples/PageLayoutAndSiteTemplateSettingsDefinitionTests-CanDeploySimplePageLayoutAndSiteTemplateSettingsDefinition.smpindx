<?xml version="1.0" encoding="utf-16"?>
<DocSample xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <IsMethod>true</IsMethod>
  <IsClass>false</IsClass>
  <Tags>
    <DocSampleTag>
      <Name>Category</Name>
      <Values>
        <string>Web Model</string>
        <string>Web site</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isFoundation</Name>
      <Values>
        <string>False</string>
      </Values>
    </DocSampleTag>
    <DocSampleTag>
      <Name>isStandard</Name>
      <Values>
        <string>True</string>
      </Values>
    </DocSampleTag>
  </Tags>
  <Title>Setup default web templates</Title>
  <MethodBodyWithFunction>
        

        
        //[Browsable(false)]
        public void CanDeploySimplePageLayoutAndSiteTemplateSettingsDefinition()
        {
            var sitePublishingInfrastructureFeature = BuiltInSiteFeatures.SharePointServerPublishingInfrastructure.Inherit(def =&gt;
            {
                def.Enable();
            });

            var webPublishingInfrastructureFeature = BuiltInWebFeatures.SharePointServerPublishing.Inherit(def =&gt;
            {
                def.Enable();
            });

            var settings = new PageLayoutAndSiteTemplateSettingsDefinition
            {
                // setup web templates
                UseDefinedWebTemplates = true,
                DefinedWebTemplates = new Collection&lt;string&gt;
                {
                    BuiltInWebTemplates.Collaboration.BlankSite,
                    BuiltInWebTemplates.Collaboration.Blog,
                    BuiltInWebTemplates.Collaboration.TeamSite
                },

                // setup page layouts
                UseDefinedPageLayouts = true,
                DefinedPageLayouts = new Collection&lt;string&gt;
                {
                    BuiltInPublishingPageLayoutNames.ArticleLeft,
                    BuiltInPublishingPageLayoutNames.ArticleRight,
                    BuiltInPublishingPageLayoutNames.ArticleLinks
                },

                // setup default page layout
                UseDefinedDefaultPageLayout = true,
                DefinedDefaultPageLayout = BuiltInPublishingPageLayoutNames.ArticleRight,
            };

            // create site model to enable publishing infrastructure
            // then deploy web model with page layout settings

            var siteModel = SPMeta2Model.NewSiteModel(site =&gt;
            {
                site.AddSiteFeature(sitePublishingInfrastructureFeature);
            });

            var webModel = SPMeta2Model.NewWebModel(web =&gt;
            {
                web.AddWebFeature(webPublishingInfrastructureFeature);
                web.AddPageLayoutAndSiteTemplateSettings(settings);
            });

            DeployModel(siteModel);
            DeployModel(webModel);
        }</MethodBodyWithFunction>
  <MethodBody>var sitePublishingInfrastructureFeature = BuiltInSiteFeatures.SharePointServerPublishingInfrastructure.Inherit(def =&gt;
{
    def.Enable();
});

var webPublishingInfrastructureFeature = BuiltInWebFeatures.SharePointServerPublishing.Inherit(def =&gt;
{
    def.Enable();
});

var settings = new PageLayoutAndSiteTemplateSettingsDefinition
{
    // setup web templates
    UseDefinedWebTemplates = true,
    DefinedWebTemplates = new Collection&lt;string&gt;
    {
        BuiltInWebTemplates.Collaboration.BlankSite,
        BuiltInWebTemplates.Collaboration.Blog,
        BuiltInWebTemplates.Collaboration.TeamSite
    },

    // setup page layouts
    UseDefinedPageLayouts = true,
    DefinedPageLayouts = new Collection&lt;string&gt;
    {
        BuiltInPublishingPageLayoutNames.ArticleLeft,
        BuiltInPublishingPageLayoutNames.ArticleRight,
        BuiltInPublishingPageLayoutNames.ArticleLinks
    },

    // setup default page layout
    UseDefinedDefaultPageLayout = true,
    DefinedDefaultPageLayout = BuiltInPublishingPageLayoutNames.ArticleRight,
};

// create site model to enable publishing infrastructure
// then deploy web model with page layout settings

var siteModel = SPMeta2Model.NewSiteModel(site =&gt;
{
    site.AddSiteFeature(sitePublishingInfrastructureFeature);
});

var webModel = SPMeta2Model.NewWebModel(web =&gt;
{
    web.AddWebFeature(webPublishingInfrastructureFeature);
    web.AddPageLayoutAndSiteTemplateSettings(settings);
});

DeployModel(siteModel);
DeployModel(webModel);

</MethodBody>
  <Language>cs</Language>
  <Namespace>SPMeta2.Docs.ProvisionSamples.Provision.Definitions</Namespace>
  <ClassName>PageLayoutAndSiteTemplateSettingsDefinitionTests</ClassName>
  <MethodName>CanDeploySimplePageLayoutAndSiteTemplateSettingsDefinition</MethodName>
  <ClassComment />
  <MethodFullName>SPMeta2.Docs.ProvisionSamples.Provision.Definitions.PageLayoutAndSiteTemplateSettingsDefinitionTests.CanDeploySimplePageLayoutAndSiteTemplateSettingsDefinition</MethodFullName>
  <ClassFullName>SPMeta2.Docs.ProvisionSamples.Provision.Definitions.PageLayoutAndSiteTemplateSettingsDefinitionTests</ClassFullName>
  <MethodParametersCount>0</MethodParametersCount>
  <SourceFileName>PageLayoutAndSiteTemplateSettingsDefinitionTests.cs</SourceFileName>
  <SourceFileNameWithoutExtension>PageLayoutAndSiteTemplateSettingsDefinitionTests</SourceFileNameWithoutExtension>
</DocSample>