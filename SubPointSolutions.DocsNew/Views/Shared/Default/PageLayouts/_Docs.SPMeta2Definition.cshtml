@using System;
@using System.Linq;
@using System.Collections;
@using System.Collections.Generic;

@{
    Layout = SConfig.GetThemedTemplate("Layouts/_Main.Master.cshtml");
}

@Html.Partial(SConfig.GetThemedTemplate("Components/_Main.TopNavigation.cshtml"))

<style>
    

    section {
        padding-top: 60px;
        margin-top: -60px;
    }

    @@media only screen and (max-width : 768px) {
      section {
        padding-top: 120px;
        margin-top: -120px;
    }
    }
</style>

<div class="container body-content sd-body-content sd-definition-content">
    <div class="row sps-sicondnav">
        @Html.Partial(SConfig.GetThemedTemplate("Components/_SecondNavigation.cshtml"))
    </div>

    <div class="row">

        <div class="col-lg-3 col-md-3 col-sm-3 sps-sidebar">
            @Html.Partial(SConfig.GetThemedTemplate("Components/_Sidebar.cshtml"))
        </div>

        <div class="col-lg-9 col-md-9 col-sm-9 sps-document">

            @{
                var isHidden = Model.Get<bool>("Hidden");

                var csomLabel = "label-default";
                var ssomLabel = "label-default";

                var scopes = new List<string>();
                var samples = new List<SubPointSolutions.DocsBuildTools.Data.DocSample>();

                if (isHidden == false)
                {
                    var fileName = Model.String("SourceFileBase");
                    var definitionName = Model.String("SourceFileBase").Replace("Tests", string.Empty);

                    samples = SConfig.AllSamples
                                     .Where(s => s.IsMethod && s.ClassName == (definitionName + "Tests"))
                                     .ToList();

                    var supportsCSOMValue = Model.Get("spmeta2.isCSOMCompatible");
                    var supportsSSOMValue = Model.Get("spmeta2.isSSOMCompatible");
                    var scopesValue = Model.Get("spmeta2.parentHostTypes");

                    if(supportsCSOMValue == null)
                    {
                        throw new Exception(String.Format("Cannot find metadata value [{0}] for file:[{1}]", "spmeta2.isCSOMCompatible", fileName));
                    }

                    if (supportsSSOMValue == null)
                    {
                        throw new Exception(String.Format("Cannot find metadata value [{0}] for file:[{1}]", "spmeta2.isSSOMCompatible", fileName));
                    }

                    if (scopesValue == null)
                    {
                        throw new Exception(String.Format("Cannot find metadata value [{0}] for file:[{1}]", "spmeta2.parentHostTypes", fileName));
                    }

                    csomLabel = Boolean.Parse((string)supportsCSOMValue) ? "label-success" : "label-default";
                    ssomLabel = Boolean.Parse((string)supportsSSOMValue) ? "label-success" : "label-default";

                    scopes = ((string)scopesValue).Split(',').Select(s => s.Trim().Replace("Definition", String.Empty)).ToList();
                }
            }

            <h4>API support</h4>
            <span class="label @csomLabel">CSOM</span>
            <span class="label @ssomLabel">SSOM</span>

            <h4>Can be deployed under</h4>
            @foreach (var scope in scopes)
            {
                <span class="label label-success">@scope</span>
            }

            <h4>Notes @*- <span><a href='#' target="_blank">edit</a></span>*@</h4>

            @{
                var body = RenderBody();
            }

            @if (body != null)
            {
                this.WriteTo(Output, body);
            }
            else
            {
                // TODO
                <div class="well well-lg">
                    <h2>Ouch...</h2>
                    <p>Seems there are't much notes yet.</p>
                    <p>
                        Drop us a line at <a href='#'>Yammer</a> or put a few words together at <span><a href='#' target="_blank">github</a></span>.
                        We'll help you out.
                    </p>
                </div>
            }

            <h4>Examples</h4>

            @if (samples.Any())
            {
                <ul>
                    @foreach (var sample in samples)
                    {
                        if (String.IsNullOrEmpty(sample.Title))
                        {
                            throw new Exception(String.Format("Sample with method name [{0}] does not have title. FileName:[{1}]", sample.MethodName, sample.SourceFileName));
                        }

                        <li><a href="@("#" + SubPointSolutions.DocsBuildTools.Data.SampleReadAPI.GetSafeAnchor(sample.Title))">@sample.Title</a></li>
                    }
                </ul>

                foreach (var sample in samples)
                {
                    <section name="@(SubPointSolutions.DocsBuildTools.Data.SampleReadAPI.GetSafeAnchor(sample.Title))" id="@(SubPointSolutions.DocsBuildTools.Data.SampleReadAPI.GetSafeAnchor(sample.Title))"></section>

                    <div class="panel panel-default">

                        <div class="panel-heading">
                            @sample.Title
                        </div>

                        <div class="panel-body">
                            <pre><code class="language-cs brush: csharp">
@sample.MethodBody
                            </code></pre>
                        </div>
                    </div>

                }
            }
            else
            {
                <div class="well well-lg">
                    <h2>Ouch...</h2>
                    <p>Seems there are't much samples yet.</p>
                    <p>
                        Drop us a line at <a href='#'>Yammer</a> or put a few words together at <span><a href='#' target="_blank">github</a></span>.
                        We'll help you out.
                    </p>
                </div>
            }
        </div>

       
    </div>
</div>

@Html.Partial(SConfig.GetThemedTemplate("Components/_Main.Footer.cshtml"))
