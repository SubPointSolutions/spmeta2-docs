<?xml version="1.0" encoding="utf-16"?>
<DocSample xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <IsMethod>false</IsMethod>
  <IsClass>true</IsClass>
  <Tags>
    <DocSampleTag>
      <Name>Category</Name>
      <Values>
        <string>Site Collection Model/Taxonomy</string>
      </Values>
    </DocSampleTag>
  </Tags>
  <Title />
  <Description />
  <MethodBodyWithFunction>    
    
    //[Browsable(false)]
    public class TaxonomyTermStoreDefinitionTests : ProvisionTestBase
    {
        #region methods

      
        [TestMethod]
        [TestCategory("Docs.TaxonomyTermStoreDefinition")]
        [DisplayName("Add taxonomy term store by Name")]
        //[Browsable(false)]
        public void LookupTermStoreByName()
        {
            var mmsTermStore = new TaxonomyTermStoreDefinition
            {
                Name = "Managed Metadata Service"
            };

            var model = SPMeta2Model.NewSiteModel(site =&gt;
            {
                site.AddTaxonomyTermStore(mmsTermStore, termStore =&gt;
                {
                    // do stuff, add groups, term sets
                });
            });

            DeployModel(model);
        }

        [TestMethod]
        [TestCategory("Docs.TaxonomyTermStoreDefinition")]
        [DisplayName("Add default taxonomy term store")]
        //[Browsable(false)]
        public void LookupDefaultSiteTermStore()
        {
            var defaultSiteTermStore = new TaxonomyTermStoreDefinition
            {
                UseDefaultSiteCollectionTermStore = true
            };

            var model = SPMeta2Model.NewSiteModel(site =&gt;
            {
                site.AddTaxonomyTermStore(defaultSiteTermStore, termStore =&gt;
                {
                    // do stuff, add groups, term sets
                });
            });

            DeployModel(model);
        }

        #endregion
    }</MethodBodyWithFunction>
  <MethodBody>//[Browsable(false)]
public class TaxonomyTermStoreDefinitionTests : ProvisionTestBase
{
    #region methods


    [TestMethod]
    [TestCategory("Docs.TaxonomyTermStoreDefinition")]
    [DisplayName("Add taxonomy term store by Name")]
    //[Browsable(false)]
    public void LookupTermStoreByName()
    {
        var mmsTermStore = new TaxonomyTermStoreDefinition
        {
            Name = "Managed Metadata Service"
        };

        var model = SPMeta2Model.NewSiteModel(site =&gt;
        {
            site.AddTaxonomyTermStore(mmsTermStore, termStore =&gt;
            {
                // do stuff, add groups, term sets
            });
        });

        DeployModel(model);
    }

    [TestMethod]
    [TestCategory("Docs.TaxonomyTermStoreDefinition")]
    [DisplayName("Add default taxonomy term store")]
    //[Browsable(false)]
    public void LookupDefaultSiteTermStore()
    {
        var defaultSiteTermStore = new TaxonomyTermStoreDefinition
        {
            UseDefaultSiteCollectionTermStore = true
        };

        var model = SPMeta2Model.NewSiteModel(site =&gt;
        {
            site.AddTaxonomyTermStore(defaultSiteTermStore, termStore =&gt;
            {
                // do stuff, add groups, term sets
            });
        });

        DeployModel(model);
    }

    #endregion
}
</MethodBody>
  <Language>cs</Language>
  <Namespace>SPMeta2.Docs.ProvisionSamples.Provision.Definitions</Namespace>
  <ClassName>TaxonomyTermStoreDefinitionTests</ClassName>
  <MethodName>TaxonomyTermStoreDefinitionTestsClass</MethodName>
  <ClassComment />
  <MethodFullName>ClassTaxonomyTermStoreDefinitionTestsClass</MethodFullName>
  <ClassFullName>SPMeta2.Docs.ProvisionSamples.Provision.Definitions.TaxonomyTermStoreDefinitionTests</ClassFullName>
  <MethodParametersCount>0</MethodParametersCount>
  <SourceFileName>TaxonomyTermStoreDefinitionTests.cs</SourceFileName>
  <SourceFileNameWithoutExtension>TaxonomyTermStoreDefinitionTests</SourceFileNameWithoutExtension>
</DocSample>